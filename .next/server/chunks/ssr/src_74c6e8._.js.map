{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/alex/testing-browser/audio-learning-hub/src/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from 'clsx';\r\nimport { twMerge } from 'tailwind-merge';\r\n\r\nexport function cn(...inputs: ClassValue[]) {\r\n  return twMerge(clsx(inputs));\r\n}\r\n\r\nexport function formatDate(date: Date) {\r\n  return new Intl.DateTimeFormat('en-US', {\r\n    dateStyle: 'medium',\r\n  }).format(date);\r\n}\r\n\r\nexport function truncate(text: string, length: number) {\r\n  return text.length > length\r\n    ? text.slice(0, length) + '...'\r\n    : text;\r\n}"],"names":[],"mappings":";;;;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,yNAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,sLAAA,CAAA,OAAI,AAAD,EAAE;AACtB;AAEO,SAAS,WAAW,IAAU;IACnC,OAAO,IAAI,KAAK,cAAc,CAAC,SAAS;QACtC,WAAW;IACb,GAAG,MAAM,CAAC;AACZ;AAEO,SAAS,SAAS,IAAY,EAAE,MAAc;IACnD,OAAO,KAAK,MAAM,GAAG,SACjB,KAAK,KAAK,CAAC,GAAG,UAAU,QACxB;AACN"}},
    {"offset": {"line": 27, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 33, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/alex/testing-browser/audio-learning-hub/src/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\r\nimport { cva, type VariantProps } from \"class-variance-authority\"\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst buttonVariants = cva(\r\n  \"inline-flex items-center justify-center rounded-md text-sm font-medium\",\r\n  {\r\n    variants: {\r\n      variant: {\r\n        default: \"bg-primary text-white\",\r\n        outline: \"border border-input bg-transparent\",\r\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\r\n      },\r\n      size: {\r\n        default: \"h-10 px-4 py-2\",\r\n        sm: \"h-9 px-3\",\r\n        lg: \"h-11 px-8\",\r\n      },\r\n    },\r\n    defaultVariants: {\r\n      variant: \"default\",\r\n      size: \"default\",\r\n    },\r\n  }\r\n)\r\n\r\ninterface ButtonProps\r\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\r\n    VariantProps<typeof buttonVariants> {}\r\n\r\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\r\n  ({ className, variant, size, ...props }, ref) => {\r\n    return (\r\n      <button\r\n        className={cn(buttonVariants({ variant, size, className }))}\r\n        ref={ref}\r\n        {...props}\r\n      />\r\n    )\r\n  }\r\n)\r\nButton.displayName = \"Button\"\r\n\r\nexport { Button, buttonVariants }\r\n"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;;;;;AAEA,MAAM,iBAAiB,CAAA,GAAA,2OAAA,CAAA,MAAG,AAAD,EACvB,0EACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,SAAS;YACT,OAAO;QACT;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;QACN;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AAOF,MAAM,uBAAS,4WAAM,UAAU,CAC7B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,GAAG,OAAO,EAAE;IACvC,qBACE,oZAAC;QACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACxD,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,OAAO,WAAW,GAAG"}},
    {"offset": {"line": 80, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 86, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/alex/testing-browser/audio-learning-hub/src/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nexport interface InputProps\r\n  extends React.InputHTMLAttributes<HTMLInputElement> {}\r\n\r\nconst Input = React.forwardRef<HTMLInputElement, InputProps>(\r\n  ({ className, type, ...props }, ref) => {\r\n    return (\r\n      <input\r\n        type={type}\r\n        className={cn(\r\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\r\n          className\r\n        )}\r\n        ref={ref}\r\n        {...props}\r\n      />\r\n    )\r\n  }\r\n)\r\nInput.displayName = \"Input\"\r\n\r\nexport { Input }"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAKA,MAAM,sBAAQ,4WAAM,UAAU,CAC5B,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAO,EAAE;IAC9B,qBACE,oZAAC;QACC,MAAM;QACN,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,gWACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,MAAM,WAAW,GAAG"}},
    {"offset": {"line": 109, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 115, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/alex/testing-browser/audio-learning-hub/src/components/ui/scroll-area.tsx"],"sourcesContent":["import * as React from \"react\"\r\nimport * as ScrollAreaPrimitive from \"@radix-ui/react-scroll-area\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst ScrollArea = React.forwardRef<\r\n  React.ElementRef<typeof ScrollAreaPrimitive.Root>,\r\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.Root>\r\n>(({ className, children, ...props }, forwardedRef) => (\r\n  <ScrollAreaPrimitive.Root\r\n    className={cn(\"relative overflow-hidden\", className)}\r\n    {...props}\r\n  >\r\n    <ScrollAreaPrimitive.Viewport \r\n      ref={forwardedRef}\r\n      className=\"h-full w-full rounded-[inherit]\"\r\n    >\r\n      {children}\r\n    </ScrollAreaPrimitive.Viewport>\r\n    <ScrollBar />\r\n    <ScrollAreaPrimitive.Corner />\r\n  </ScrollAreaPrimitive.Root>\r\n))\r\nScrollArea.displayName = \"ScrollArea\"\r\n\r\nconst ScrollBar = React.forwardRef<\r\n  React.ElementRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>,\r\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>\r\n>(({ className, orientation = \"vertical\", ...props }, forwardedRef) => (\r\n  <ScrollAreaPrimitive.ScrollAreaScrollbar\r\n    ref={forwardedRef}\r\n    orientation={orientation}\r\n    className={cn(\r\n      \"flex touch-none select-none transition-colors\",\r\n      orientation === \"vertical\" &&\r\n        \"h-full w-2.5 border-l border-l-transparent p-[1px]\",\r\n      orientation === \"horizontal\" &&\r\n        \"h-2.5 border-t border-t-transparent p-[1px]\",\r\n      className\r\n    )}\r\n    {...props}\r\n  >\r\n    <ScrollAreaPrimitive.ScrollAreaThumb className=\"relative flex-1 rounded-full bg-border\" />\r\n  </ScrollAreaPrimitive.ScrollAreaScrollbar>\r\n))\r\nScrollBar.displayName = \"ScrollBar\"\r\n\r\nexport { ScrollArea, ScrollBar }\r\n"],"names":[],"mappings":";;;;;AAAA;AAGA;AAFA;;;;;AAIA,MAAM,2BAAa,4WAAM,UAAU,CAGjC,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE,6BACpC,oZAAC,kYAAoB,IAAI;QACvB,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,4BAA4B;QACzC,GAAG,KAAK;;0BAET,oZAAC,kYAAoB,QAAQ;gBAC3B,KAAK;gBACL,WAAU;0BAET;;;;;;0BAEH,oZAAC;;;;;0BACD,oZAAC,kYAAoB,MAAM;;;;;;;;;;;AAG/B,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,4WAAM,UAAU,CAGhC,CAAC,EAAE,SAAS,EAAE,cAAc,UAAU,EAAE,GAAG,OAAO,EAAE,6BACpD,oZAAC,kYAAoB,mBAAmB;QACtC,KAAK;QACL,aAAa;QACb,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,iDACA,gBAAgB,cACd,sDACF,gBAAgB,gBACd,+CACF;QAED,GAAG,KAAK;kBAET,cAAA,oZAAC,kYAAoB,eAAe;YAAC,WAAU;;;;;;;;;;;AAGnD,UAAU,WAAW,GAAG"}},
    {"offset": {"line": 176, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 182, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/alex/testing-browser/audio-learning-hub/src/lib/ollama/llm-manager.ts"],"sourcesContent":["import type { ChatMessage } from '../types';\r\n\r\nexport class LLMManager {\r\n  private models: Map<string, string>;\r\n  private activeModel: string;\r\n  private context: ChatMessage[];\r\n\r\n  constructor() {\r\n    this.models = new Map();\r\n    this.context = [];\r\n    \r\n    // Initialize with dual-role models\r\n    this.addModel('architect', 'deepseek-r1:14b');\r\n    this.addModel('developer', 'deepseek-r1:14b');\r\n    \r\n    this.activeModel = 'developer'; // Default model\r\n  }\r\n\r\n  addModel(name: string, modelId: string): void {\r\n    this.models.set(name, modelId);\r\n  }\r\n\r\n  removeModel(name: string): void {\r\n    this.models.delete(name);\r\n    if (this.activeModel === name) {\r\n      const nextModel = this.models.keys().next().value;\r\n      if (!nextModel) {\r\n        throw new Error('Cannot remove last model');\r\n      }\r\n      this.activeModel = nextModel;\r\n    }\r\n  }\r\n\r\n  setActiveModel(name: string): void {\r\n    if (!this.models.has(name)) {\r\n      throw new Error(`Model ${name} not found`);\r\n    }\r\n    this.activeModel = name;\r\n  }\r\n\r\n  getActiveModel(): string {\r\n    return this.activeModel;\r\n  }\r\n\r\n  getAvailableModels(): string[] {\r\n    return Array.from(this.models.keys());\r\n  }\r\n\r\n  clearContext(): void {\r\n    this.context = [];\r\n  }\r\n\r\n  addContext(message: ChatMessage): void {\r\n    this.context.push(message);\r\n  }\r\n\r\n  async generateResponse(prompt: string): Promise<string> {\r\n    try {\r\n      const modelId = this.models.get(this.activeModel);\r\n      if (!modelId) {\r\n        throw new Error('No active model configured');\r\n      }\r\n\r\n      const rolePrompt = this.activeModel === 'architect'\r\n        ? `You are a senior software architect focused on high-level system design, architecture patterns, and best practices. \r\nAnalyze requests from an architectural perspective, considering:\r\n- System design and architecture\r\n- Scalability and performance\r\n- Integration patterns\r\n- Best practices and design principles\r\n- Trade-offs and technical decisions\r\n\r\nQuestion/Request: ${prompt}`\r\n        : `You are a senior software developer focused on practical implementation details and coding. \r\nAnalyze requests from a development perspective, considering:\r\n- Code implementation details\r\n- Programming patterns and practices\r\n- Error handling and edge cases\r\n- Testing and debugging approaches\r\n- Performance optimizations\r\n\r\nQuestion/Request: ${prompt}`;\r\n\r\n      console.debug('Sending request to Ollama:', {\r\n        model: modelId,\r\n        prompt: rolePrompt,\r\n        stream: false\r\n      });\r\n\r\n      const response = await fetch('http://localhost:11434/api/generate', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({\r\n          model: modelId,\r\n          prompt: rolePrompt,\r\n          stream: false\r\n        })\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error(`Ollama API error: ${response.status}`);\r\n      }\r\n\r\n      const data = await response.json();\r\n      console.debug('Ollama response:', data);\r\n\r\n      // Add response to context\r\n      this.addContext({\r\n        id: Date.now().toString(),\r\n        role: 'assistant',\r\n        content: data.response,\r\n        timestamp: Date.now(),\r\n      });\r\n\r\n      return data.response;\r\n    } catch (error) {\r\n      console.error('LLM request failed:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  async generateStreamingResponse(prompt: string, onChunk: (chunk: string) => void): Promise<void> {\r\n    try {\r\n      const modelId = this.models.get(this.activeModel);\r\n      if (!modelId) {\r\n        throw new Error('No active model configured');\r\n      }\r\n\r\n      const rolePrompt = this.activeModel === 'architect'\r\n        ? `You are a senior software architect focused on high-level system design, architecture patterns, and best practices. \r\nAnalyze requests from an architectural perspective, considering:\r\n- System design and architecture\r\n- Scalability and performance\r\n- Integration patterns\r\n- Best practices and design principles\r\n- Trade-offs and technical decisions\r\n\r\nQuestion/Request: ${prompt}`\r\n        : `You are a senior software developer focused on practical implementation details and coding. \r\nAnalyze requests from a development perspective, considering:\r\n- Code implementation details\r\n- Programming patterns and practices\r\n- Error handling and edge cases\r\n- Testing and debugging approaches\r\n- Performance optimizations\r\n\r\nQuestion/Request: ${prompt}`;\r\n\r\n      console.debug('Sending streaming request to Ollama:', {\r\n        model: modelId,\r\n        prompt: rolePrompt,\r\n        stream: true\r\n      });\r\n\r\n      const response = await fetch('http://localhost:11434/api/generate', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({\r\n          model: modelId,\r\n          prompt: rolePrompt,\r\n          stream: true\r\n        })\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error(`Ollama API error: ${response.status}`);\r\n      }\r\n\r\n      const reader = response.body?.getReader();\r\n      if (!reader) throw new Error('No response body');\r\n\r\n      let fullResponse = '';\r\n      const decoder = new TextDecoder();\r\n\r\n      try {\r\n        while (true) {\r\n          const { done, value } = await reader.read();\r\n          if (done) break;\r\n\r\n          const text = decoder.decode(value);\r\n          const lines = text.split('\\n').filter(line => line.trim());\r\n          \r\n          for (const line of lines) {\r\n            try {\r\n              const data = JSON.parse(line);\r\n              if (data.response) {\r\n                onChunk(data.response);\r\n                fullResponse += data.response;\r\n              }\r\n            } catch (e) {\r\n              console.warn('Failed to parse chunk:', line);\r\n            }\r\n          }\r\n        }\r\n\r\n        // Add complete response to context\r\n        this.addContext({\r\n          id: Date.now().toString(),\r\n          role: 'assistant',\r\n          content: fullResponse,\r\n          timestamp: Date.now(),\r\n        });\r\n\r\n      } catch (error) {\r\n        console.error('Streaming error:', error);\r\n        throw error;\r\n      } finally {\r\n        reader.releaseLock();\r\n      }\r\n    } catch (error) {\r\n      console.error('LLM streaming request failed:', error);\r\n      throw error;\r\n    }\r\n  }\r\n}\r\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 368, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 374, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/alex/testing-browser/audio-learning-hub/src/lib/storage/chat-storage.ts"],"sourcesContent":["import type { ChatMessage } from '../types';\r\n\r\nexport interface StoredChat {\r\n  id: string;\r\n  messages: ChatMessage[];\r\n  model: string;\r\n  lastUpdated: number;\r\n}\r\n\r\nconst CHATS_KEY = 'audio-learning-hub-chats';\r\n\r\nexport class ChatStorage {\r\n  private static instance: ChatStorage;\r\n  private chats: Map<string, StoredChat>;\r\n\r\n  private constructor() {\r\n    this.chats = new Map();\r\n    this.loadFromStorage();\r\n  }\r\n\r\n  static getInstance(): ChatStorage {\r\n    if (!ChatStorage.instance) {\r\n      ChatStorage.instance = new ChatStorage();\r\n    }\r\n    return ChatStorage.instance;\r\n  }\r\n\r\n  private loadFromStorage(): void {\r\n    try {\r\n      const storedChats = localStorage.getItem(CHATS_KEY);\r\n      if (storedChats) {\r\n        const chatsArray: StoredChat[] = JSON.parse(storedChats);\r\n        this.chats = new Map(chatsArray.map(chat => [chat.id, chat]));\r\n      }\r\n    } catch (error) {\r\n      console.error('Error loading chats from storage:', error);\r\n    }\r\n  }\r\n\r\n  private saveToStorage(): void {\r\n    try {\r\n      const chatsArray = Array.from(this.chats.values());\r\n      localStorage.setItem(CHATS_KEY, JSON.stringify(chatsArray));\r\n    } catch (error) {\r\n      console.error('Error saving chats to storage:', error);\r\n    }\r\n  }\r\n\r\n  createChat(model: string): StoredChat {\r\n    const chat: StoredChat = {\r\n      id: Date.now().toString(),\r\n      messages: [],\r\n      model,\r\n      lastUpdated: Date.now(),\r\n    };\r\n    this.chats.set(chat.id, chat);\r\n    this.saveToStorage();\r\n    return chat;\r\n  }\r\n\r\n  getChat(id: string): StoredChat | undefined {\r\n    return this.chats.get(id);\r\n  }\r\n\r\n  getAllChats(): StoredChat[] {\r\n    return Array.from(this.chats.values())\r\n      .sort((a, b) => b.lastUpdated - a.lastUpdated);\r\n  }\r\n\r\n  updateChat(id: string, messages: ChatMessage[], model: string): void {\r\n    const chat = this.chats.get(id);\r\n    if (chat) {\r\n      chat.messages = messages;\r\n      chat.model = model;\r\n      chat.lastUpdated = Date.now();\r\n      this.saveToStorage();\r\n    }\r\n  }\r\n\r\n  deleteChat(id: string): void {\r\n    this.chats.delete(id);\r\n    this.saveToStorage();\r\n  }\r\n\r\n  exportChat(id: string): string {\r\n    const chat = this.chats.get(id);\r\n    if (!chat) {\r\n      throw new Error(`Chat not found: ${id}`);\r\n    }\r\n    return JSON.stringify(chat, null, 2);\r\n  }\r\n\r\n  importChat(chatData: string): StoredChat {\r\n    try {\r\n      const chat: StoredChat = JSON.parse(chatData);\r\n      if (!chat.id || !Array.isArray(chat.messages) || !chat.model) {\r\n        throw new Error('Invalid chat data format');\r\n      }\r\n      \r\n      // Ensure unique ID\r\n      chat.id = Date.now().toString();\r\n      chat.lastUpdated = Date.now();\r\n      \r\n      this.chats.set(chat.id, chat);\r\n      this.saveToStorage();\r\n      return chat;\r\n    } catch (error) {\r\n      throw new Error(`Failed to import chat: ${error instanceof Error ? error.message : 'Unknown error'}`);\r\n    }\r\n  }\r\n\r\n  clearAllChats(): void {\r\n    this.chats.clear();\r\n    this.saveToStorage();\r\n  }\r\n}\r\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 471, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 477, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/alex/testing-browser/audio-learning-hub/src/components/chat-panel.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { useState, useEffect, useCallback } from 'react';\r\nimport { Button } from './ui/button';\r\nimport { Input } from './ui/input';\r\nimport { ScrollArea } from './ui/scroll-area';\r\nimport { LLMManager } from '../lib/ollama/llm-manager';\r\nimport type { ChatMessage } from '../lib/types';\r\nimport { ChatStorage, type StoredChat } from '../lib/storage/chat-storage';\r\n\r\ninterface ChatPanelProps {\r\n  currentChat: StoredChat;\r\n  onChatUpdate: (chat: StoredChat) => void;\r\n}\r\n\r\nexport function ChatPanel({ currentChat, onChatUpdate }: ChatPanelProps) {\r\n  const [input, setInput] = useState('');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [selectedModel, setSelectedModel] = useState(currentChat.model);\r\n  const [llmManager] = useState(() => new LLMManager());\r\n  const [chatStorage] = useState(() => ChatStorage.getInstance());\r\n\r\n  useEffect(() => {\r\n    const scrollContainer = document.querySelector('[data-radix-scroll-area-viewport]');\r\n    if (scrollContainer) {\r\n      requestAnimationFrame(() => {\r\n        scrollContainer.scrollTop = scrollContainer.scrollHeight;\r\n      });\r\n    }\r\n  }, [currentChat.messages]);\r\n\r\n  const handleModelChange = useCallback((model: string) => {\r\n    setSelectedModel(model);\r\n    llmManager.setActiveModel(model);\r\n    chatStorage.updateChat(currentChat.id, currentChat.messages, model);\r\n    onChatUpdate({\r\n      ...currentChat,\r\n      model,\r\n    });\r\n  }, [currentChat, llmManager, onChatUpdate, chatStorage]);\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    if (!input.trim() || isLoading) return;\r\n\r\n    const trimmedInput = input.trim();\r\n    setInput('');\r\n    setIsLoading(true);\r\n\r\n    const userMessage: ChatMessage = {\r\n      id: Date.now().toString(),\r\n      role: 'user' as const,\r\n      content: trimmedInput,\r\n      timestamp: Date.now(),\r\n    };\r\n\r\n    const updatedMessages = [...currentChat.messages, userMessage];\r\n    onChatUpdate({\r\n      ...currentChat,\r\n      messages: updatedMessages,\r\n    });\r\n    chatStorage.updateChat(currentChat.id, updatedMessages, selectedModel);\r\n\r\n    try {\r\n      let response = '';\r\n      await llmManager.generateStreamingResponse(trimmedInput, (chunk) => {\r\n        response += chunk;\r\n        const lastMessage = updatedMessages[updatedMessages.length - 1];\r\n        \r\n        const newMessages = lastMessage?.role === 'assistant'\r\n          ? [...updatedMessages.slice(0, -1), { ...lastMessage, content: response }]\r\n          : [...updatedMessages, {\r\n              id: Date.now().toString(),\r\n              role: 'assistant' as const,\r\n              content: response,\r\n              timestamp: Date.now(),\r\n            }];\r\n\r\n        chatStorage.updateChat(currentChat.id, newMessages, selectedModel);\r\n        onChatUpdate({\r\n          ...currentChat,\r\n          messages: newMessages,\r\n        });\r\n      });\r\n    } catch (error) {\r\n      console.error('Error generating response:', error);\r\n      const errorText = error instanceof Error ? error.message : 'An unexpected error occurred';\r\n      const errorMessage: ChatMessage = {\r\n        id: Date.now().toString(),\r\n        role: 'assistant' as const,\r\n        content: `Error: ${errorText}. Please ensure Ollama is running and try again.`,\r\n        timestamp: Date.now(),\r\n      };\r\n\r\n      const updatedMessages = [...currentChat.messages, errorMessage];\r\n      onChatUpdate({\r\n        ...currentChat,\r\n        messages: updatedMessages,\r\n      });\r\n      chatStorage.updateChat(currentChat.id, updatedMessages, selectedModel);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const exportChat = useCallback(async () => {\r\n    if (!currentChat) return;\r\n    \r\n    try {\r\n      const chatJson = chatStorage.exportChat(currentChat.id);\r\n      const blob = new Blob([chatJson], { type: 'application/json' });\r\n      const url = URL.createObjectURL(blob);\r\n      const a = document.createElement('a');\r\n      a.href = url;\r\n      a.download = `chat-export-${new Date().toISOString()}.json`;\r\n      document.body.appendChild(a);\r\n      a.click();\r\n      document.body.removeChild(a);\r\n      URL.revokeObjectURL(url);\r\n    } catch (error) {\r\n      console.error('Error exporting chat:', error);\r\n    }\r\n  }, [currentChat, chatStorage]);\r\n\r\n  const clearChat = useCallback(() => {\r\n    const newChat = chatStorage.createChat(selectedModel);\r\n    onChatUpdate(newChat);\r\n    llmManager.clearContext();\r\n  }, [selectedModel, llmManager, onChatUpdate, chatStorage]);\r\n\r\n  const deleteChat = useCallback(() => {\r\n    chatStorage.deleteChat(currentChat.id);\r\n    const chats = chatStorage.getAllChats();\r\n    \r\n    if (chats.length > 0) {\r\n      onChatUpdate(chats[0]);\r\n      setSelectedModel(chats[0].model);\r\n    } else {\r\n      const newChat = chatStorage.createChat(selectedModel);\r\n      onChatUpdate(newChat);\r\n    }\r\n    \r\n    llmManager.clearContext();\r\n  }, [currentChat.id, selectedModel, llmManager, onChatUpdate, chatStorage]);\r\n\r\n  return (\r\n    <div className=\"flex flex-col h-full border rounded-lg p-4 gap-4\">\r\n      <div className=\"flex items-center justify-between\">\r\n        <div className=\"flex gap-2\">\r\n          <Button\r\n            variant={selectedModel === 'architect' ? 'default' : 'outline'}\r\n            onClick={() => handleModelChange('architect')}\r\n            className=\"flex items-center gap-2\"\r\n          >\r\n            <svg\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n              width=\"16\"\r\n              height=\"16\"\r\n              viewBox=\"0 0 24 24\"\r\n              fill=\"none\"\r\n              stroke=\"currentColor\"\r\n              strokeWidth=\"2\"\r\n              strokeLinecap=\"round\"\r\n              strokeLinejoin=\"round\"\r\n            >\r\n              <path d=\"M2 20a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2V8l-7-7H4a2 2 0 0 0-2 2v17Z\" />\r\n              <path d=\"M15 2v7h7\" />\r\n            </svg>\r\n            Architect Mode\r\n          </Button>\r\n          <Button\r\n            variant={selectedModel === 'developer' ? 'default' : 'outline'}\r\n            onClick={() => handleModelChange('developer')}\r\n            className=\"flex items-center gap-2\"\r\n          >\r\n            <svg\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n              width=\"16\"\r\n              height=\"16\"\r\n              viewBox=\"0 0 24 24\"\r\n              fill=\"none\"\r\n              stroke=\"currentColor\"\r\n              strokeWidth=\"2\"\r\n              strokeLinecap=\"round\"\r\n              strokeLinejoin=\"round\"\r\n            >\r\n              <path d=\"m8 3 4 8 5-5 5 15H2L8 3z\" />\r\n            </svg>\r\n            Developer Mode\r\n          </Button>\r\n        </div>\r\n        <div className=\"flex gap-2\">\r\n          <Button onClick={exportChat} variant=\"outline\" size=\"sm\">\r\n            Export\r\n          </Button>\r\n          <Button onClick={clearChat} variant=\"outline\" size=\"sm\">\r\n            New Chat\r\n          </Button>\r\n          <Button onClick={deleteChat} variant=\"outline\" size=\"sm\">\r\n            Delete\r\n          </Button>\r\n        </div>\r\n      </div>\r\n\r\n      <ScrollArea className=\"flex-1 p-4\">\r\n        <div className=\"space-y-4\">\r\n          {currentChat?.messages.map((message) => (\r\n            <div\r\n              key={message.id}\r\n              className={`flex ${\r\n                message.role === 'user' ? 'justify-end' : 'justify-start'\r\n              }`}\r\n            >\r\n              <div\r\n                className={`max-w-[80%] rounded-lg p-3 ${\r\n                  message.role === 'user'\r\n                    ? 'bg-blue-500 text-white'\r\n                    : 'bg-gray-100'\r\n                }`}\r\n              >\r\n                <p className=\"whitespace-pre-wrap\">{message.content}</p>\r\n                <span className=\"text-xs opacity-50 mt-1 block\">\r\n                  {new Date(message.timestamp).toLocaleTimeString()}\r\n                </span>\r\n              </div>\r\n            </div>\r\n          ))}\r\n          {isLoading && (\r\n            <div className=\"flex justify-start\">\r\n              <div className=\"bg-gray-100 rounded-lg p-3\">\r\n                <div className=\"animate-pulse\">Thinking...</div>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </ScrollArea>\r\n\r\n      <form onSubmit={handleSubmit} className=\"flex gap-2\">\r\n        <Input\r\n          value={input}\r\n          onChange={(e) => setInput(e.target.value)}\r\n          placeholder=\"Type your message...\"\r\n          disabled={isLoading}\r\n          className=\"flex-1\"\r\n        />\r\n        <Button type=\"submit\" disabled={isLoading}>\r\n          Send\r\n        </Button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AACA;AACA;AAEA;AARA;;;;;;;;AAeO,SAAS,UAAU,EAAE,WAAW,EAAE,YAAY,EAAkB;IACrE,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,2WAAA,CAAA,WAAQ,AAAD,EAAE;IACnC,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,2WAAA,CAAA,WAAQ,AAAD,EAAE;IAC3C,MAAM,CAAC,eAAe,iBAAiB,GAAG,CAAA,GAAA,2WAAA,CAAA,WAAQ,AAAD,EAAE,YAAY,KAAK;IACpE,MAAM,CAAC,WAAW,GAAG,CAAA,GAAA,2WAAA,CAAA,WAAQ,AAAD,EAAE,IAAM,IAAI,sIAAA,CAAA,aAAU;IAClD,MAAM,CAAC,YAAY,GAAG,CAAA,GAAA,2WAAA,CAAA,WAAQ,AAAD,EAAE,IAAM,wIAAA,CAAA,cAAW,CAAC,WAAW;IAE5D,CAAA,GAAA,2WAAA,CAAA,YAAS,AAAD,EAAE;QACR,MAAM,kBAAkB,SAAS,aAAa,CAAC;QAC/C,IAAI,iBAAiB;YACnB,sBAAsB;gBACpB,gBAAgB,SAAS,GAAG,gBAAgB,YAAY;YAC1D;QACF;IACF,GAAG;QAAC,YAAY,QAAQ;KAAC;IAEzB,MAAM,oBAAoB,CAAA,GAAA,2WAAA,CAAA,cAAW,AAAD,EAAE,CAAC;QACrC,iBAAiB;QACjB,WAAW,cAAc,CAAC;QAC1B,YAAY,UAAU,CAAC,YAAY,EAAE,EAAE,YAAY,QAAQ,EAAE;QAC7D,aAAa;YACX,GAAG,WAAW;YACd;QACF;IACF,GAAG;QAAC;QAAa;QAAY;QAAc;KAAY;IAEvD,MAAM,eAAe,OAAO;QAC1B,EAAE,cAAc;QAChB,IAAI,CAAC,MAAM,IAAI,MAAM,WAAW;QAEhC,MAAM,eAAe,MAAM,IAAI;QAC/B,SAAS;QACT,aAAa;QAEb,MAAM,cAA2B;YAC/B,IAAI,KAAK,GAAG,GAAG,QAAQ;YACvB,MAAM;YACN,SAAS;YACT,WAAW,KAAK,GAAG;QACrB;QAEA,MAAM,kBAAkB;eAAI,YAAY,QAAQ;YAAE;SAAY;QAC9D,aAAa;YACX,GAAG,WAAW;YACd,UAAU;QACZ;QACA,YAAY,UAAU,CAAC,YAAY,EAAE,EAAE,iBAAiB;QAExD,IAAI;YACF,IAAI,WAAW;YACf,MAAM,WAAW,yBAAyB,CAAC,cAAc,CAAC;gBACxD,YAAY;gBACZ,MAAM,cAAc,eAAe,CAAC,gBAAgB,MAAM,GAAG,EAAE;gBAE/D,MAAM,cAAc,aAAa,SAAS,cACtC;uBAAI,gBAAgB,KAAK,CAAC,GAAG,CAAC;oBAAI;wBAAE,GAAG,WAAW;wBAAE,SAAS;oBAAS;iBAAE,GACxE;uBAAI;oBAAiB;wBACnB,IAAI,KAAK,GAAG,GAAG,QAAQ;wBACvB,MAAM;wBACN,SAAS;wBACT,WAAW,KAAK,GAAG;oBACrB;iBAAE;gBAEN,YAAY,UAAU,CAAC,YAAY,EAAE,EAAE,aAAa;gBACpD,aAAa;oBACX,GAAG,WAAW;oBACd,UAAU;gBACZ;YACF;QACF,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,8BAA8B;YAC5C,MAAM,YAAY,iBAAiB,QAAQ,MAAM,OAAO,GAAG;YAC3D,MAAM,eAA4B;gBAChC,IAAI,KAAK,GAAG,GAAG,QAAQ;gBACvB,MAAM;gBACN,SAAS,CAAC,OAAO,EAAE,UAAU,gDAAgD,CAAC;gBAC9E,WAAW,KAAK,GAAG;YACrB;YAEA,MAAM,kBAAkB;mBAAI,YAAY,QAAQ;gBAAE;aAAa;YAC/D,aAAa;gBACX,GAAG,WAAW;gBACd,UAAU;YACZ;YACA,YAAY,UAAU,CAAC,YAAY,EAAE,EAAE,iBAAiB;QAC1D,SAAU;YACR,aAAa;QACf;IACF;IAEA,MAAM,aAAa,CAAA,GAAA,2WAAA,CAAA,cAAW,AAAD,EAAE;QAC7B,IAAI,CAAC,aAAa;QAElB,IAAI;YACF,MAAM,WAAW,YAAY,UAAU,CAAC,YAAY,EAAE;YACtD,MAAM,OAAO,IAAI,KAAK;gBAAC;aAAS,EAAE;gBAAE,MAAM;YAAmB;YAC7D,MAAM,MAAM,IAAI,eAAe,CAAC;YAChC,MAAM,IAAI,SAAS,aAAa,CAAC;YACjC,EAAE,IAAI,GAAG;YACT,EAAE,QAAQ,GAAG,CAAC,YAAY,EAAE,IAAI,OAAO,WAAW,GAAG,KAAK,CAAC;YAC3D,SAAS,IAAI,CAAC,WAAW,CAAC;YAC1B,EAAE,KAAK;YACP,SAAS,IAAI,CAAC,WAAW,CAAC;YAC1B,IAAI,eAAe,CAAC;QACtB,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,yBAAyB;QACzC;IACF,GAAG;QAAC;QAAa;KAAY;IAE7B,MAAM,YAAY,CAAA,GAAA,2WAAA,CAAA,cAAW,AAAD,EAAE;QAC5B,MAAM,UAAU,YAAY,UAAU,CAAC;QACvC,aAAa;QACb,WAAW,YAAY;IACzB,GAAG;QAAC;QAAe;QAAY;QAAc;KAAY;IAEzD,MAAM,aAAa,CAAA,GAAA,2WAAA,CAAA,cAAW,AAAD,EAAE;QAC7B,YAAY,UAAU,CAAC,YAAY,EAAE;QACrC,MAAM,QAAQ,YAAY,WAAW;QAErC,IAAI,MAAM,MAAM,GAAG,GAAG;YACpB,aAAa,KAAK,CAAC,EAAE;YACrB,iBAAiB,KAAK,CAAC,EAAE,CAAC,KAAK;QACjC,OAAO;YACL,MAAM,UAAU,YAAY,UAAU,CAAC;YACvC,aAAa;QACf;QAEA,WAAW,YAAY;IACzB,GAAG;QAAC,YAAY,EAAE;QAAE;QAAe;QAAY;QAAc;KAAY;IAEzE,qBACE,oZAAC;QAAI,WAAU;;0BACb,oZAAC;gBAAI,WAAU;;kCACb,oZAAC;wBAAI,WAAU;;0CACb,oZAAC,kIAAA,CAAA,SAAM;gCACL,SAAS,kBAAkB,cAAc,YAAY;gCACrD,SAAS,IAAM,kBAAkB;gCACjC,WAAU;;kDAEV,oZAAC;wCACC,OAAM;wCACN,OAAM;wCACN,QAAO;wCACP,SAAQ;wCACR,MAAK;wCACL,QAAO;wCACP,aAAY;wCACZ,eAAc;wCACd,gBAAe;;0DAEf,oZAAC;gDAAK,GAAE;;;;;;0DACR,oZAAC;gDAAK,GAAE;;;;;;;;;;;;oCACJ;;;;;;;0CAGR,oZAAC,kIAAA,CAAA,SAAM;gCACL,SAAS,kBAAkB,cAAc,YAAY;gCACrD,SAAS,IAAM,kBAAkB;gCACjC,WAAU;;kDAEV,oZAAC;wCACC,OAAM;wCACN,OAAM;wCACN,QAAO;wCACP,SAAQ;wCACR,MAAK;wCACL,QAAO;wCACP,aAAY;wCACZ,eAAc;wCACd,gBAAe;kDAEf,cAAA,oZAAC;4CAAK,GAAE;;;;;;;;;;;oCACJ;;;;;;;;;;;;;kCAIV,oZAAC;wBAAI,WAAU;;0CACb,oZAAC,kIAAA,CAAA,SAAM;gCAAC,SAAS;gCAAY,SAAQ;gCAAU,MAAK;0CAAK;;;;;;0CAGzD,oZAAC,kIAAA,CAAA,SAAM;gCAAC,SAAS;gCAAW,SAAQ;gCAAU,MAAK;0CAAK;;;;;;0CAGxD,oZAAC,kIAAA,CAAA,SAAM;gCAAC,SAAS;gCAAY,SAAQ;gCAAU,MAAK;0CAAK;;;;;;;;;;;;;;;;;;0BAM7D,oZAAC,0IAAA,CAAA,aAAU;gBAAC,WAAU;0BACpB,cAAA,oZAAC;oBAAI,WAAU;;wBACZ,aAAa,SAAS,IAAI,CAAC,wBAC1B,oZAAC;gCAEC,WAAW,CAAC,KAAK,EACf,QAAQ,IAAI,KAAK,SAAS,gBAAgB,iBAC1C;0CAEF,cAAA,oZAAC;oCACC,WAAW,CAAC,2BAA2B,EACrC,QAAQ,IAAI,KAAK,SACb,2BACA,eACJ;;sDAEF,oZAAC;4CAAE,WAAU;sDAAuB,QAAQ,OAAO;;;;;;sDACnD,oZAAC;4CAAK,WAAU;sDACb,IAAI,KAAK,QAAQ,SAAS,EAAE,kBAAkB;;;;;;;;;;;;+BAd9C,QAAQ,EAAE;;;;;wBAmBlB,2BACC,oZAAC;4BAAI,WAAU;sCACb,cAAA,oZAAC;gCAAI,WAAU;0CACb,cAAA,oZAAC;oCAAI,WAAU;8CAAgB;;;;;;;;;;;;;;;;;;;;;;;;;;;0BAOzC,oZAAC;gBAAK,UAAU;gBAAc,WAAU;;kCACtC,oZAAC,iIAAA,CAAA,QAAK;wBACJ,OAAO;wBACP,UAAU,CAAC,IAAM,SAAS,EAAE,MAAM,CAAC,KAAK;wBACxC,aAAY;wBACZ,UAAU;wBACV,WAAU;;;;;;kCAEZ,oZAAC,kIAAA,CAAA,SAAM;wBAAC,MAAK;wBAAS,UAAU;kCAAW;;;;;;;;;;;;;;;;;;AAMnD"}},
    {"offset": {"line": 890, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 896, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/alex/testing-browser/audio-learning-hub/src/components/chat-list.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { useCallback } from 'react';\r\nimport { Button } from './ui/button';\r\nimport { ScrollArea } from './ui/scroll-area';\r\nimport { ChatStorage, type StoredChat } from '../lib/storage/chat-storage';\r\n\r\ninterface ChatListProps {\r\n  chats: StoredChat[];\r\n  currentChat: StoredChat | null;\r\n  onSelectChat: (chat: StoredChat) => void;\r\n  onNewChat: () => void;\r\n  onDeleteChat: (chatId: string) => void;\r\n}\r\n\r\nexport function ChatList({ chats, currentChat, onSelectChat, onNewChat, onDeleteChat }: ChatListProps) {\r\n  const formatDate = useCallback((timestamp: number) => {\r\n    const date = new Date(timestamp);\r\n    const today = new Date();\r\n    const yesterday = new Date(today);\r\n    yesterday.setDate(yesterday.getDate() - 1);\r\n\r\n    if (date.toDateString() === today.toDateString()) {\r\n      return `Today at ${date.toLocaleTimeString()}`;\r\n    } else if (date.toDateString() === yesterday.toDateString()) {\r\n      return `Yesterday at ${date.toLocaleTimeString()}`;\r\n    } else {\r\n      return date.toLocaleDateString();\r\n    }\r\n  }, []);\r\n\r\n  const getPreview = useCallback((chat: StoredChat) => {\r\n    const lastMessage = chat.messages[chat.messages.length - 1];\r\n    if (!lastMessage) return 'New conversation';\r\n    \r\n    const preview = lastMessage.content.slice(0, 50);\r\n    return preview.length < lastMessage.content.length\r\n      ? `${preview}...`\r\n      : preview;\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"flex flex-col h-full border-r\">\r\n      <div className=\"p-4 border-b\">\r\n        <Button onClick={onNewChat} className=\"w-full\">\r\n          New Chat\r\n        </Button>\r\n      </div>\r\n\r\n      <ScrollArea className=\"flex-1\">\r\n        <div className=\"space-y-2 p-4\">\r\n          {chats.map((chat) => (\r\n            <div\r\n              key={chat.id}\r\n              className={`p-3 rounded-lg cursor-pointer hover:bg-gray-100 transition-colors ${\r\n                currentChat?.id === chat.id ? 'bg-gray-100' : ''\r\n              }`}\r\n              onClick={() => onSelectChat(chat)}\r\n            >\r\n              <div className=\"flex items-center justify-between\">\r\n                <span className=\"font-medium\">{chat.model}</span>\r\n                <span className=\"text-xs text-gray-500\">\r\n                  {formatDate(chat.lastUpdated)}\r\n                </span>\r\n              </div>\r\n              <p className=\"text-sm text-gray-600 mt-1 line-clamp-2\">\r\n                {getPreview(chat)}\r\n              </p>\r\n              {currentChat?.id === chat.id && (\r\n                <Button\r\n                  variant=\"ghost\"\r\n                  size=\"sm\"\r\n                  className=\"mt-2 text-red-500 hover:text-red-600 hover:bg-red-50\"\r\n                  onClick={(e) => {\r\n                    e.stopPropagation();\r\n                    onDeleteChat(chat.id);\r\n                  }}\r\n                >\r\n                  Delete\r\n                </Button>\r\n              )}\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </ScrollArea>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAJA;;;;;AAeO,SAAS,SAAS,EAAE,KAAK,EAAE,WAAW,EAAE,YAAY,EAAE,SAAS,EAAE,YAAY,EAAiB;IACnG,MAAM,aAAa,CAAA,GAAA,2WAAA,CAAA,cAAW,AAAD,EAAE,CAAC;QAC9B,MAAM,OAAO,IAAI,KAAK;QACtB,MAAM,QAAQ,IAAI;QAClB,MAAM,YAAY,IAAI,KAAK;QAC3B,UAAU,OAAO,CAAC,UAAU,OAAO,KAAK;QAExC,IAAI,KAAK,YAAY,OAAO,MAAM,YAAY,IAAI;YAChD,OAAO,CAAC,SAAS,EAAE,KAAK,kBAAkB,IAAI;QAChD,OAAO,IAAI,KAAK,YAAY,OAAO,UAAU,YAAY,IAAI;YAC3D,OAAO,CAAC,aAAa,EAAE,KAAK,kBAAkB,IAAI;QACpD,OAAO;YACL,OAAO,KAAK,kBAAkB;QAChC;IACF,GAAG,EAAE;IAEL,MAAM,aAAa,CAAA,GAAA,2WAAA,CAAA,cAAW,AAAD,EAAE,CAAC;QAC9B,MAAM,cAAc,KAAK,QAAQ,CAAC,KAAK,QAAQ,CAAC,MAAM,GAAG,EAAE;QAC3D,IAAI,CAAC,aAAa,OAAO;QAEzB,MAAM,UAAU,YAAY,OAAO,CAAC,KAAK,CAAC,GAAG;QAC7C,OAAO,QAAQ,MAAM,GAAG,YAAY,OAAO,CAAC,MAAM,GAC9C,GAAG,QAAQ,GAAG,CAAC,GACf;IACN,GAAG,EAAE;IAEL,qBACE,oZAAC;QAAI,WAAU;;0BACb,oZAAC;gBAAI,WAAU;0BACb,cAAA,oZAAC,kIAAA,CAAA,SAAM;oBAAC,SAAS;oBAAW,WAAU;8BAAS;;;;;;;;;;;0BAKjD,oZAAC,0IAAA,CAAA,aAAU;gBAAC,WAAU;0BACpB,cAAA,oZAAC;oBAAI,WAAU;8BACZ,MAAM,GAAG,CAAC,CAAC,qBACV,oZAAC;4BAEC,WAAW,CAAC,kEAAkE,EAC5E,aAAa,OAAO,KAAK,EAAE,GAAG,gBAAgB,IAC9C;4BACF,SAAS,IAAM,aAAa;;8CAE5B,oZAAC;oCAAI,WAAU;;sDACb,oZAAC;4CAAK,WAAU;sDAAe,KAAK,KAAK;;;;;;sDACzC,oZAAC;4CAAK,WAAU;sDACb,WAAW,KAAK,WAAW;;;;;;;;;;;;8CAGhC,oZAAC;oCAAE,WAAU;8CACV,WAAW;;;;;;gCAEb,aAAa,OAAO,KAAK,EAAE,kBAC1B,oZAAC,kIAAA,CAAA,SAAM;oCACL,SAAQ;oCACR,MAAK;oCACL,WAAU;oCACV,SAAS,CAAC;wCACR,EAAE,eAAe;wCACjB,aAAa,KAAK,EAAE;oCACtB;8CACD;;;;;;;2BAxBE,KAAK,EAAE;;;;;;;;;;;;;;;;;;;;;AAkC1B"}},
    {"offset": {"line": 1025, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1031, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/alex/testing-browser/audio-learning-hub/src/lib/ollama/test-connection.ts"],"sourcesContent":["export async function testOllamaConnection() {\r\n  try {\r\n    const response = await fetch('http://127.0.0.1:11434/api/generate', {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({\r\n        model: 'deepseek-r1:14b',\r\n        prompt: 'Hello, are you working?',\r\n        stream: false\r\n      })\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error(`HTTP error! status: ${response.status}`);\r\n    }\r\n\r\n    const data = await response.json();\r\n    console.log('Ollama test response:', data);\r\n    return true;\r\n  } catch (error) {\r\n    console.error('Ollama connection test failed:', error);\r\n    return false;\r\n  }\r\n}\r\n"],"names":[],"mappings":";;;AAAO,eAAe;IACpB,IAAI;QACF,MAAM,WAAW,MAAM,MAAM,uCAAuC;YAClE,QAAQ;YACR,SAAS;gBAAE,gBAAgB;YAAmB;YAC9C,MAAM,KAAK,SAAS,CAAC;gBACnB,OAAO;gBACP,QAAQ;gBACR,QAAQ;YACV;QACF;QAEA,IAAI,CAAC,SAAS,EAAE,EAAE;YAChB,MAAM,IAAI,MAAM,CAAC,oBAAoB,EAAE,SAAS,MAAM,EAAE;QAC1D;QAEA,MAAM,OAAO,MAAM,SAAS,IAAI;QAChC,QAAQ,GAAG,CAAC,yBAAyB;QACrC,OAAO;IACT,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,kCAAkC;QAChD,OAAO;IACT;AACF"}},
    {"offset": {"line": 1058, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1064, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/alex/testing-browser/audio-learning-hub/src/components/chat-container.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { useState, useEffect, useCallback } from 'react';\r\nimport { ChatPanel } from './chat-panel';\r\nimport { ChatList } from './chat-list';\r\nimport { ChatStorage, type StoredChat } from '../lib/storage/chat-storage';\r\nimport { testOllamaConnection } from '../lib/ollama/test-connection';\r\n\r\nexport function ChatContainer() {\r\n  const [chats, setChats] = useState<StoredChat[]>([]);\r\n  const [currentChat, setCurrentChat] = useState<StoredChat | null>(null);\r\n  const [isConnected, setIsConnected] = useState(false);\r\n  const [connectionError, setConnectionError] = useState(false);\r\n  const chatStorage = ChatStorage.getInstance();\r\n\r\n  useEffect(() => {\r\n    // Test Ollama connection and load chats\r\n    const init = async () => {\r\n      try {\r\n        const connected = await testOllamaConnection();\r\n        setIsConnected(connected);\r\n        setConnectionError(!connected);\r\n\r\n        if (connected) {\r\n          const loadedChats = chatStorage.getAllChats();\r\n          setChats(loadedChats);\r\n          if (loadedChats.length > 0) {\r\n            setCurrentChat(loadedChats[0]);\r\n          }\r\n        }\r\n      } catch (error) {\r\n        console.error('Failed to initialize chat:', error);\r\n        setConnectionError(true);\r\n      }\r\n    };\r\n\r\n    init();\r\n  }, []);\r\n\r\n  const handleSelectChat = useCallback((chat: StoredChat) => {\r\n    setCurrentChat(chat);\r\n  }, []);\r\n\r\n  const handleNewChat = useCallback(() => {\r\n    const newChat = chatStorage.createChat('developer'); // Default to developer mode\r\n    setChats(prev => [newChat, ...prev]);\r\n    setCurrentChat(newChat);\r\n  }, []);\r\n\r\n  const handleDeleteChat = useCallback((chatId: string) => {\r\n    chatStorage.deleteChat(chatId);\r\n    const updatedChats = chatStorage.getAllChats();\r\n    setChats(updatedChats);\r\n    \r\n    if (currentChat?.id === chatId) {\r\n      setCurrentChat(updatedChats.length > 0 ? updatedChats[0] : null);\r\n    }\r\n  }, [currentChat]);\r\n\r\n  // Update chats list when current chat changes\r\n  useEffect(() => {\r\n    if (currentChat) {\r\n      setChats(prev => {\r\n        const index = prev.findIndex(chat => chat.id === currentChat.id);\r\n        if (index === -1) return prev;\r\n        \r\n        const updated = [...prev];\r\n        updated[index] = currentChat;\r\n        return updated.sort((a, b) => b.lastUpdated - a.lastUpdated);\r\n      });\r\n    }\r\n  }, [currentChat]);\r\n\r\n  return (\r\n    <div className=\"flex h-screen\">\r\n      <div className=\"w-80 border-r\">\r\n        <ChatList\r\n          chats={chats}\r\n          currentChat={currentChat}\r\n          onSelectChat={handleSelectChat}\r\n          onNewChat={handleNewChat}\r\n          onDeleteChat={handleDeleteChat}\r\n        />\r\n      </div>\r\n      <div className=\"flex-1\">\r\n        {connectionError ? (\r\n          <div className=\"flex items-center justify-center h-full text-red-500\">\r\n            Unable to connect to Ollama. Please ensure Ollama is running and try again.\r\n          </div>\r\n        ) : currentChat ? (\r\n          <ChatPanel\r\n            key={currentChat.id}\r\n            currentChat={currentChat}\r\n            onChatUpdate={setCurrentChat}\r\n          />\r\n        ) : (\r\n          <div className=\"flex items-center justify-center h-full text-gray-500\">\r\n            Select a chat or create a new one to get started\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AACA;AACA;AANA;;;;;;;AAQO,SAAS;IACd,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,2WAAA,CAAA,WAAQ,AAAD,EAAgB,EAAE;IACnD,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,2WAAA,CAAA,WAAQ,AAAD,EAAqB;IAClE,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,2WAAA,CAAA,WAAQ,AAAD,EAAE;IAC/C,MAAM,CAAC,iBAAiB,mBAAmB,GAAG,CAAA,GAAA,2WAAA,CAAA,WAAQ,AAAD,EAAE;IACvD,MAAM,cAAc,wIAAA,CAAA,cAAW,CAAC,WAAW;IAE3C,CAAA,GAAA,2WAAA,CAAA,YAAS,AAAD,EAAE;QACR,wCAAwC;QACxC,MAAM,OAAO;YACX,IAAI;gBACF,MAAM,YAAY,MAAM,CAAA,GAAA,0IAAA,CAAA,uBAAoB,AAAD;gBAC3C,eAAe;gBACf,mBAAmB,CAAC;gBAEpB,IAAI,WAAW;oBACb,MAAM,cAAc,YAAY,WAAW;oBAC3C,SAAS;oBACT,IAAI,YAAY,MAAM,GAAG,GAAG;wBAC1B,eAAe,WAAW,CAAC,EAAE;oBAC/B;gBACF;YACF,EAAE,OAAO,OAAO;gBACd,QAAQ,KAAK,CAAC,8BAA8B;gBAC5C,mBAAmB;YACrB;QACF;QAEA;IACF,GAAG,EAAE;IAEL,MAAM,mBAAmB,CAAA,GAAA,2WAAA,CAAA,cAAW,AAAD,EAAE,CAAC;QACpC,eAAe;IACjB,GAAG,EAAE;IAEL,MAAM,gBAAgB,CAAA,GAAA,2WAAA,CAAA,cAAW,AAAD,EAAE;QAChC,MAAM,UAAU,YAAY,UAAU,CAAC,cAAc,4BAA4B;QACjF,SAAS,CAAA,OAAQ;gBAAC;mBAAY;aAAK;QACnC,eAAe;IACjB,GAAG,EAAE;IAEL,MAAM,mBAAmB,CAAA,GAAA,2WAAA,CAAA,cAAW,AAAD,EAAE,CAAC;QACpC,YAAY,UAAU,CAAC;QACvB,MAAM,eAAe,YAAY,WAAW;QAC5C,SAAS;QAET,IAAI,aAAa,OAAO,QAAQ;YAC9B,eAAe,aAAa,MAAM,GAAG,IAAI,YAAY,CAAC,EAAE,GAAG;QAC7D;IACF,GAAG;QAAC;KAAY;IAEhB,8CAA8C;IAC9C,CAAA,GAAA,2WAAA,CAAA,YAAS,AAAD,EAAE;QACR,IAAI,aAAa;YACf,SAAS,CAAA;gBACP,MAAM,QAAQ,KAAK,SAAS,CAAC,CAAA,OAAQ,KAAK,EAAE,KAAK,YAAY,EAAE;gBAC/D,IAAI,UAAU,CAAC,GAAG,OAAO;gBAEzB,MAAM,UAAU;uBAAI;iBAAK;gBACzB,OAAO,CAAC,MAAM,GAAG;gBACjB,OAAO,QAAQ,IAAI,CAAC,CAAC,GAAG,IAAM,EAAE,WAAW,GAAG,EAAE,WAAW;YAC7D;QACF;IACF,GAAG;QAAC;KAAY;IAEhB,qBACE,oZAAC;QAAI,WAAU;;0BACb,oZAAC;gBAAI,WAAU;0BACb,cAAA,oZAAC,kIAAA,CAAA,WAAQ;oBACP,OAAO;oBACP,aAAa;oBACb,cAAc;oBACd,WAAW;oBACX,cAAc;;;;;;;;;;;0BAGlB,oZAAC;gBAAI,WAAU;0BACZ,gCACC,oZAAC;oBAAI,WAAU;8BAAuD;;;;;2BAGpE,4BACF,oZAAC,mIAAA,CAAA,YAAS;oBAER,aAAa;oBACb,cAAc;mBAFT,YAAY,EAAE;;;;yCAKrB,oZAAC;oBAAI,WAAU;8BAAwD;;;;;;;;;;;;;;;;;AAOjF"}},
    {"offset": {"line": 1201, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}