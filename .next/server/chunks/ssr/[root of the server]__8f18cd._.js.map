{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/alex/testing-browser/audio-learning-hub/src/lib/utils.ts"],"sourcesContent":["import { type ClassValue, clsx } from \"clsx\";\r\nimport { twMerge } from \"tailwind-merge\";\r\n\r\nexport function cn(...inputs: ClassValue[]) {\r\n  return twMerge(clsx(inputs));\r\n}\r\n\r\nexport function generateId(): string {\r\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\r\n    const r = Math.random() * 16 | 0;\r\n    const v = c === 'x' ? r : (r & 0x3 | 0x8);\r\n    return v.toString(16);\r\n  });\r\n}\r\n"],"names":[],"mappings":";;;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,yNAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,sLAAA,CAAA,OAAI,AAAD,EAAE;AACtB;AAEO,SAAS;IACd,OAAO,uCAAuC,OAAO,CAAC,SAAS,SAAS,CAAC;QACvE,MAAM,IAAI,KAAK,MAAM,KAAK,KAAK;QAC/B,MAAM,IAAI,MAAM,MAAM,IAAK,IAAI,MAAM;QACrC,OAAO,EAAE,QAAQ,CAAC;IACpB;AACF"}},
    {"offset": {"line": 25, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 31, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/alex/testing-browser/audio-learning-hub/src/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\";\r\nimport { cn } from \"../../lib/utils\";\r\n\r\nexport interface ButtonProps\r\n  extends React.ButtonHTMLAttributes<HTMLButtonElement> {\r\n  variant?: 'default' | 'outline' | 'ghost';\r\n}\r\n\r\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\r\n  ({ className, variant = 'default', ...props }, ref) => {\r\n    return (\r\n      <button\r\n        className={cn(\r\n          \"inline-flex items-center justify-center rounded-md text-sm font-medium transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:opacity-50 disabled:pointer-events-none ring-offset-background\",\r\n          {\r\n            \"bg-primary text-primary-foreground hover:bg-primary/90\": variant === 'default',\r\n            \"border border-input hover:bg-accent hover:text-accent-foreground\": variant === 'outline',\r\n            \"hover:bg-accent hover:text-accent-foreground\": variant === 'ghost',\r\n          },\r\n          \"h-10 py-2 px-4\",\r\n          className\r\n        )}\r\n        ref={ref}\r\n        {...props}\r\n      />\r\n    );\r\n  }\r\n);\r\n\r\nButton.displayName = \"Button\";\r\n\r\nexport { Button };\r\n"],"names":[],"mappings":";;;;AAAA;AACA;;;;AAOA,MAAM,uBAAS,4WAAM,UAAU,CAC7B,CAAC,EAAE,SAAS,EAAE,UAAU,SAAS,EAAE,GAAG,OAAO,EAAE;IAC7C,qBACE,oZAAC;QACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,wQACA;YACE,0DAA0D,YAAY;YACtE,oEAAoE,YAAY;YAChF,gDAAgD,YAAY;QAC9D,GACA,kBACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAGF,OAAO,WAAW,GAAG"}},
    {"offset": {"line": 57, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 63, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/alex/testing-browser/audio-learning-hub/src/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\";\r\nimport { cn } from \"../../lib/utils\";\r\n\r\nexport interface InputProps\r\n  extends React.InputHTMLAttributes<HTMLInputElement> {}\r\n\r\nconst Input = React.forwardRef<HTMLInputElement, InputProps>(\r\n  ({ className, type, ...props }, ref) => {\r\n    return (\r\n      <input\r\n        type={type}\r\n        className={cn(\r\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\r\n          className\r\n        )}\r\n        ref={ref}\r\n        {...props}\r\n      />\r\n    );\r\n  }\r\n);\r\n\r\nInput.displayName = \"Input\";\r\n\r\nexport { Input };\r\n"],"names":[],"mappings":";;;;AAAA;AACA;;;;AAKA,MAAM,sBAAQ,4WAAM,UAAU,CAC5B,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAO,EAAE;IAC9B,qBACE,oZAAC;QACC,MAAM;QACN,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,gWACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAGF,MAAM,WAAW,GAAG"}},
    {"offset": {"line": 86, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 100, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/alex/testing-browser/audio-learning-hub/src/lib/storage/db.ts"],"sourcesContent":["import { openDB } from 'idb';\r\nimport { nanoid } from 'nanoid';\r\nimport { Message, Conversation, ModelContext } from './types';\r\n\r\nexport class StorageManager {\r\n  private async initDB() {\r\n    return openDB('chat-db', 1, {\r\n      upgrade(db) {\r\n        // Create stores if they don't exist\r\n        if (!db.objectStoreNames.contains('conversations')) {\r\n          db.createObjectStore('conversations', { keyPath: 'id' });\r\n        }\r\n        if (!db.objectStoreNames.contains('messages')) {\r\n          const messageStore = db.createObjectStore('messages', { keyPath: 'id' });\r\n          messageStore.createIndex('byConversation', 'conversationId');\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  async saveMessage(message: Message) {\r\n    const db = await this.initDB();\r\n    await db.put('messages', message);\r\n    \r\n    // Update conversation timestamp\r\n    const tx = db.transaction('conversations', 'readwrite');\r\n    const store = tx.objectStore('conversations');\r\n    const conversation = await store.get(message.conversationId);\r\n    if (conversation) {\r\n      conversation.updatedAt = Date.now();\r\n      await store.put(conversation);\r\n    }\r\n  }\r\n\r\n  async getMessages(conversationId: string): Promise<Message[]> {\r\n    const db = await this.initDB();\r\n    return db.getAllFromIndex('messages', 'byConversation', conversationId);\r\n  }\r\n\r\n  // Alias for getMessages to maintain compatibility\r\n  async getConversationMessages(conversationId: string): Promise<Message[]> {\r\n    return this.getMessages(conversationId);\r\n  }\r\n\r\n  async createConversation(title: string, models: { responder: string; listener: string }): Promise<string> {\r\n    const db = await this.initDB();\r\n    const conversation: Conversation = {\r\n      id: nanoid(),\r\n      title,\r\n      models: {\r\n        responder: models.responder,\r\n        listener: models.listener,\r\n        contexts: {} // Initialize empty contexts object\r\n      },\r\n      createdAt: Date.now(),\r\n      updatedAt: Date.now()\r\n    };\r\n    await db.put('conversations', conversation);\r\n    return conversation.id;\r\n  }\r\n\r\n  async updateModelContext(\r\n    conversationId: string,\r\n    modelName: string,\r\n    context: Partial<ModelContext>\r\n  ) {\r\n    const db = await this.initDB();\r\n    const tx = db.transaction('conversations', 'readwrite');\r\n    const store = tx.objectStore('conversations');\r\n    \r\n    const conversation = await store.get(conversationId);\r\n    if (!conversation) {\r\n      throw new Error('Conversation not found');\r\n    }\r\n\r\n    // Ensure the contexts object exists\r\n    if (!conversation.models.contexts) {\r\n      conversation.models.contexts = {};\r\n    }\r\n\r\n    // Get existing context or create new one\r\n    const existingContext = conversation.models.contexts[modelName] || {\r\n      understanding: '',\r\n      lastUpdated: 0,\r\n      messagesSeen: []\r\n    };\r\n\r\n    // Merge the new context with existing context and ensure lastUpdated is set\r\n    const updatedContext: ModelContext = {\r\n      ...existingContext,\r\n      ...context,\r\n      lastUpdated: context.lastUpdated || Date.now() // Use provided lastUpdated or current timestamp\r\n    };\r\n\r\n    // Update the context for this model\r\n    conversation.models.contexts[modelName] = updatedContext;\r\n    conversation.updatedAt = Date.now();\r\n\r\n    await store.put(conversation);\r\n  }\r\n}\r\n\r\nexport const storage = new StorageManager();\r\n"],"names":[],"mappings":";;;;AAAA;AACA;;;AAGO,MAAM;IACX,MAAc,SAAS;QACrB,OAAO,CAAA,GAAA,qLAAA,CAAA,SAAM,AAAD,EAAE,WAAW,GAAG;YAC1B,SAAQ,EAAE;gBACR,oCAAoC;gBACpC,IAAI,CAAC,GAAG,gBAAgB,CAAC,QAAQ,CAAC,kBAAkB;oBAClD,GAAG,iBAAiB,CAAC,iBAAiB;wBAAE,SAAS;oBAAK;gBACxD;gBACA,IAAI,CAAC,GAAG,gBAAgB,CAAC,QAAQ,CAAC,aAAa;oBAC7C,MAAM,eAAe,GAAG,iBAAiB,CAAC,YAAY;wBAAE,SAAS;oBAAK;oBACtE,aAAa,WAAW,CAAC,kBAAkB;gBAC7C;YACF;QACF;IACF;IAEA,MAAM,YAAY,OAAgB,EAAE;QAClC,MAAM,KAAK,MAAM,IAAI,CAAC,MAAM;QAC5B,MAAM,GAAG,GAAG,CAAC,YAAY;QAEzB,gCAAgC;QAChC,MAAM,KAAK,GAAG,WAAW,CAAC,iBAAiB;QAC3C,MAAM,QAAQ,GAAG,WAAW,CAAC;QAC7B,MAAM,eAAe,MAAM,MAAM,GAAG,CAAC,QAAQ,cAAc;QAC3D,IAAI,cAAc;YAChB,aAAa,SAAS,GAAG,KAAK,GAAG;YACjC,MAAM,MAAM,GAAG,CAAC;QAClB;IACF;IAEA,MAAM,YAAY,cAAsB,EAAsB;QAC5D,MAAM,KAAK,MAAM,IAAI,CAAC,MAAM;QAC5B,OAAO,GAAG,eAAe,CAAC,YAAY,kBAAkB;IAC1D;IAEA,kDAAkD;IAClD,MAAM,wBAAwB,cAAsB,EAAsB;QACxE,OAAO,IAAI,CAAC,WAAW,CAAC;IAC1B;IAEA,MAAM,mBAAmB,KAAa,EAAE,MAA+C,EAAmB;QACxG,MAAM,KAAK,MAAM,IAAI,CAAC,MAAM;QAC5B,MAAM,eAA6B;YACjC,IAAI,CAAA,GAAA,kMAAA,CAAA,SAAM,AAAD;YACT;YACA,QAAQ;gBACN,WAAW,OAAO,SAAS;gBAC3B,UAAU,OAAO,QAAQ;gBACzB,UAAU,CAAC,EAAE,mCAAmC;YAClD;YACA,WAAW,KAAK,GAAG;YACnB,WAAW,KAAK,GAAG;QACrB;QACA,MAAM,GAAG,GAAG,CAAC,iBAAiB;QAC9B,OAAO,aAAa,EAAE;IACxB;IAEA,MAAM,mBACJ,cAAsB,EACtB,SAAiB,EACjB,OAA8B,EAC9B;QACA,MAAM,KAAK,MAAM,IAAI,CAAC,MAAM;QAC5B,MAAM,KAAK,GAAG,WAAW,CAAC,iBAAiB;QAC3C,MAAM,QAAQ,GAAG,WAAW,CAAC;QAE7B,MAAM,eAAe,MAAM,MAAM,GAAG,CAAC;QACrC,IAAI,CAAC,cAAc;YACjB,MAAM,IAAI,MAAM;QAClB;QAEA,oCAAoC;QACpC,IAAI,CAAC,aAAa,MAAM,CAAC,QAAQ,EAAE;YACjC,aAAa,MAAM,CAAC,QAAQ,GAAG,CAAC;QAClC;QAEA,yCAAyC;QACzC,MAAM,kBAAkB,aAAa,MAAM,CAAC,QAAQ,CAAC,UAAU,IAAI;YACjE,eAAe;YACf,aAAa;YACb,cAAc,EAAE;QAClB;QAEA,4EAA4E;QAC5E,MAAM,iBAA+B;YACnC,GAAG,eAAe;YAClB,GAAG,OAAO;YACV,aAAa,QAAQ,WAAW,IAAI,KAAK,GAAG,GAAG,gDAAgD;QACjG;QAEA,oCAAoC;QACpC,aAAa,MAAM,CAAC,QAAQ,CAAC,UAAU,GAAG;QAC1C,aAAa,SAAS,GAAG,KAAK,GAAG;QAEjC,MAAM,MAAM,GAAG,CAAC;IAClB;AACF;AAEO,MAAM,UAAU,IAAI"}},
    {"offset": {"line": 194, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 200, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/alex/testing-browser/audio-learning-hub/src/lib/ollama/client.ts"],"sourcesContent":["import type { ChatMessage } from './types';\r\n\r\nexport class OllamaClient {\r\n  async chat({ messages, model }: { messages: ChatMessage[]; model?: string }) {\r\n    try {\r\n      // Use the Next.js API route instead of direct connection\r\n      const response = await fetch('/api/chat', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({\r\n          model: model || 'deepseek-r1:14b',\r\n          messages: messages,\r\n          stream: false\r\n        })\r\n      });\r\n\r\n      // If response isn't ok, get the error details\r\n      if (!response.ok) {\r\n        const errorData = await response.json();\r\n        console.error('Ollama error details:', {\r\n          status: response.status,\r\n          statusText: response.statusText,\r\n          error: errorData\r\n        });\r\n        throw new Error(`Ollama error: ${errorData.error || response.statusText}`);\r\n      }\r\n\r\n      const data = await response.json();\r\n      console.log('Successful response:', data);\r\n      return {\r\n        content: data.message?.content || ''\r\n      };\r\n    } catch (error) {\r\n      console.error('Detailed connection error:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  // Add a simple test method\r\n  async testConnection(model: string = 'deepseek-r1:14b') {\r\n    try {\r\n      const response = await fetch('/api/test-connection');\r\n      const data = await response.json();\r\n      \r\n      if (!response.ok || !data.success) {\r\n        console.error('Test failed:', data.error || response.statusText);\r\n        return false;\r\n      }\r\n      \r\n      console.log('Test response:', data);\r\n      return true;\r\n    } catch (error) {\r\n      console.error('Test failed:', error);\r\n      return false;\r\n    }\r\n  }\r\n}\r\n\r\n// Export a default instance\r\nexport const ollamaClient = new OllamaClient();\r\n"],"names":[],"mappings":";;;;AAEO,MAAM;IACX,MAAM,KAAK,EAAE,QAAQ,EAAE,KAAK,EAA+C,EAAE;QAC3E,IAAI;YACF,yDAAyD;YACzD,MAAM,WAAW,MAAM,MAAM,aAAa;gBACxC,QAAQ;gBACR,SAAS;oBAAE,gBAAgB;gBAAmB;gBAC9C,MAAM,KAAK,SAAS,CAAC;oBACnB,OAAO,SAAS;oBAChB,UAAU;oBACV,QAAQ;gBACV;YACF;YAEA,8CAA8C;YAC9C,IAAI,CAAC,SAAS,EAAE,EAAE;gBAChB,MAAM,YAAY,MAAM,SAAS,IAAI;gBACrC,QAAQ,KAAK,CAAC,yBAAyB;oBACrC,QAAQ,SAAS,MAAM;oBACvB,YAAY,SAAS,UAAU;oBAC/B,OAAO;gBACT;gBACA,MAAM,IAAI,MAAM,CAAC,cAAc,EAAE,UAAU,KAAK,IAAI,SAAS,UAAU,EAAE;YAC3E;YAEA,MAAM,OAAO,MAAM,SAAS,IAAI;YAChC,QAAQ,GAAG,CAAC,wBAAwB;YACpC,OAAO;gBACL,SAAS,KAAK,OAAO,EAAE,WAAW;YACpC;QACF,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,8BAA8B;YAC5C,MAAM;QACR;IACF;IAEA,2BAA2B;IAC3B,MAAM,eAAe,QAAgB,iBAAiB,EAAE;QACtD,IAAI;YACF,MAAM,WAAW,MAAM,MAAM;YAC7B,MAAM,OAAO,MAAM,SAAS,IAAI;YAEhC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,KAAK,OAAO,EAAE;gBACjC,QAAQ,KAAK,CAAC,gBAAgB,KAAK,KAAK,IAAI,SAAS,UAAU;gBAC/D,OAAO;YACT;YAEA,QAAQ,GAAG,CAAC,kBAAkB;YAC9B,OAAO;QACT,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,gBAAgB;YAC9B,OAAO;QACT;IACF;AACF;AAGO,MAAM,eAAe,IAAI"}},
    {"offset": {"line": 257, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 263, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/alex/testing-browser/audio-learning-hub/src/components/chat-panel.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { nanoid } from 'nanoid';\r\nimport { Button } from './ui/button';\r\nimport { Input } from './ui/input';\r\nimport { storage } from '../lib/storage/db';\r\nimport { ollamaClient } from '../lib/ollama/client';\r\nimport type { Message } from '../lib/storage/types';\r\n\r\nexport function ChatPanel() {\r\n  const [messages, setMessages] = useState<Message[]>([]);\r\n  const [conversationId, setConversationId] = useState<string | null>(null);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [input, setInput] = useState('');\r\n\r\n  // Initialize conversation if needed\r\n  useEffect(() => {\r\n    async function init() {\r\n      if (!conversationId) {\r\n        const newId = await storage.createConversation('New Chat', {\r\n          responder: 'deepseek-r1:14b',\r\n          listener: 'qwen2.5-coder'\r\n        });\r\n        setConversationId(newId);\r\n      }\r\n      \r\n      // Load existing messages\r\n      if (conversationId) {\r\n        const existingMessages = await storage.getMessages(conversationId);\r\n        setMessages(existingMessages);\r\n      }\r\n    }\r\n    init();\r\n  }, [conversationId]);\r\n\r\n  async function handleSubmit(e: React.FormEvent) {\r\n    e.preventDefault();\r\n    if (!input.trim() || isLoading || !conversationId) return;\r\n\r\n    setIsLoading(true);\r\n    try {\r\n      // Save user message\r\n      const userMessage: Message = {\r\n        id: nanoid(),\r\n        content: input,\r\n        role: 'user',\r\n        timestamp: Date.now(),\r\n        conversationId\r\n      };\r\n      await storage.saveMessage(userMessage);\r\n      setMessages(prev => [...prev, userMessage]);\r\n      setInput('');\r\n\r\n      // Get model response\r\n      const response = await ollamaClient.chat({\r\n        messages: [{ role: 'user', content: input }],\r\n        model: 'deepseek-r1:14b'\r\n      });\r\n      \r\n      // Save model response\r\n      const assistantMessage: Message = {\r\n        id: nanoid(),\r\n        content: response.content,\r\n        role: 'assistant',\r\n        timestamp: Date.now(),\r\n        conversationId,\r\n        model: 'deepseek-r1:14b'\r\n      };\r\n      await storage.saveMessage(assistantMessage);\r\n      setMessages(prev => [...prev, assistantMessage]);\r\n\r\n      // Update model context\r\n      await storage.updateModelContext(conversationId, 'deepseek-r1:14b', {\r\n        understanding: 'Processing conversation...',\r\n        messagesSeen: messages.map(m => parseInt(m.id)).filter(id => !isNaN(id))\r\n      });\r\n    } catch (error) {\r\n      console.error('Chat error:', error);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"flex flex-col h-full\">\r\n      <div className=\"flex-1 overflow-auto p-4\">\r\n        {messages.map(message => (\r\n          <div key={message.id} className={`mb-4 ${\r\n            message.role === 'user' ? 'text-right' : 'text-left'\r\n          }`}>\r\n            <div className={`inline-block p-3 rounded-lg ${\r\n              message.role === 'user' \r\n                ? 'bg-blue-500 text-white' \r\n                : 'bg-gray-100'\r\n            }`}>\r\n              {message.content}\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      <form onSubmit={handleSubmit} className=\"p-4 border-t\">\r\n        <div className=\"flex gap-2\">\r\n          <Input\r\n            value={input}\r\n            onChange={e => setInput(e.target.value)}\r\n            placeholder=\"Type a message...\"\r\n            disabled={isLoading}\r\n          />\r\n          <Button type=\"submit\" disabled={isLoading}>\r\n            {isLoading ? 'Sending...' : 'Send'}\r\n          </Button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 427, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 433, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/alex/testing-browser/audio-learning-hub/src/app/page.tsx"],"sourcesContent":["import { ChatPanel } from '../components/chat-panel';\n\nexport default function Home() {\n  return (\n    <main className=\"flex h-screen\">\n      <div className=\"flex-1 flex\">\n        {/* Left side - Resource/URL handling (later) */}\n        <div className=\"w-[600px] border-r bg-white\">\n          <div className=\"p-4\">\n            Future URL/Resource Input\n          </div>\n        </div>\n\n        {/* Right side - Chat */}\n        <div className=\"flex-1\">\n          <ChatPanel />\n        </div>\n      </div>\n    </main>\n  );\n}\n"],"names":[],"mappings":";;;;AAAA;;;AAEe,SAAS;IACtB,qBACE,oZAAC;QAAK,WAAU;kBACd,cAAA,oZAAC;YAAI,WAAU;;8BAEb,oZAAC;oBAAI,WAAU;8BACb,cAAA,oZAAC;wBAAI,WAAU;kCAAM;;;;;;;;;;;8BAMvB,oZAAC;oBAAI,WAAU;8BACb,cAAA,oZAAC,mIAAA,CAAA,YAAS;;;;;;;;;;;;;;;;;;;;;AAKpB"}},
    {"offset": {"line": 485, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 496, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 496, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}