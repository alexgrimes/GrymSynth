{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/alex/testing-browser/audio-learning-hub/src/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from 'clsx';\r\nimport { twMerge } from 'tailwind-merge';\r\n\r\nexport function cn(...inputs: ClassValue[]) {\r\n  return twMerge(clsx(inputs));\r\n}\r\n\r\nexport function formatDate(date: Date) {\r\n  return new Intl.DateTimeFormat('en-US', {\r\n    dateStyle: 'medium',\r\n  }).format(date);\r\n}\r\n\r\nexport function truncate(text: string, length: number) {\r\n  return text.length > length\r\n    ? text.slice(0, length) + '...'\r\n    : text;\r\n}"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAGO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,QAAQ,KAAK;AACtB;AAEO,SAAS,WAAW,IAAU;IACnC,OAAO,IAAI,KAAK,cAAc,CAAC,SAAS;QACtC,WAAW;IACb,GAAG,MAAM,CAAC;AACZ;AAEO,SAAS,SAAS,IAAY,EAAE,MAAc;IACnD,OAAO,KAAK,MAAM,GAAG,SACjB,KAAK,KAAK,CAAC,GAAG,UAAU,QACxB;AACN"}},
    {"offset": {"line": 35, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 41, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/alex/testing-browser/audio-learning-hub/src/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\r\nimport { Slot } from \"@radix-ui/react-slot\"\r\nimport { cva, type VariantProps } from \"class-variance-authority\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst buttonVariants = cva(\r\n  \"inline-flex items-center justify-center rounded-md text-sm font-medium transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:opacity-50 disabled:pointer-events-none ring-offset-background\",\r\n  {\r\n    variants: {\r\n      variant: {\r\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\r\n        destructive:\r\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\r\n        outline:\r\n          \"border border-input hover:bg-accent hover:text-accent-foreground\",\r\n        secondary:\r\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\r\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\r\n        link: \"underline-offset-4 hover:underline text-primary\",\r\n      },\r\n      size: {\r\n        default: \"h-10 py-2 px-4\",\r\n        sm: \"h-9 px-3 rounded-md\",\r\n        lg: \"h-11 px-8 rounded-md\",\r\n        icon: \"h-10 w-10\",\r\n      },\r\n    },\r\n    defaultVariants: {\r\n      variant: \"default\",\r\n      size: \"default\",\r\n    },\r\n  }\r\n)\r\n\r\nexport interface ButtonProps\r\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\r\n    VariantProps<typeof buttonVariants> {\r\n  asChild?: boolean\r\n}\r\n\r\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\r\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\r\n    const Comp = asChild ? Slot : \"button\"\r\n    return (\r\n      <Comp\r\n        className={cn(buttonVariants({ variant, size, className }))}\r\n        ref={ref}\r\n        {...props}\r\n      />\r\n    )\r\n  }\r\n)\r\nButton.displayName = \"Button\"\r\n\r\nexport { Button, buttonVariants }"],"names":[],"mappings":";;;;;AAAA;AAEA;AAEA;AAHA;;;;;;AAKA,MAAM,iBAAiB,CAAA,GAAA,2OAAA,CAAA,MAAG,AAAD,EACvB,wQACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aACE;YACF,SACE;YACF,WACE;YACF,OAAO;YACP,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AASF,MAAM,uBAAS,4WAAM,UAAU,CAC7B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,UAAU,KAAK,EAAE,GAAG,OAAO,EAAE;IACxD,MAAM,OAAO,UAAU,oSAAA,CAAA,OAAI,GAAG;IAC9B,qBACE,oZAAC;QACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACxD,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,OAAO,WAAW,GAAG"}},
    {"offset": {"line": 95, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 101, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/alex/testing-browser/audio-learning-hub/src/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nexport interface InputProps\r\n  extends React.InputHTMLAttributes<HTMLInputElement> {}\r\n\r\nconst Input = React.forwardRef<HTMLInputElement, InputProps>(\r\n  ({ className, type, ...props }, ref) => {\r\n    return (\r\n      <input\r\n        type={type}\r\n        className={cn(\r\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\r\n          className\r\n        )}\r\n        ref={ref}\r\n        {...props}\r\n      />\r\n    )\r\n  }\r\n)\r\nInput.displayName = \"Input\"\r\n\r\nexport { Input }"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAKA,MAAM,sBAAQ,4WAAM,UAAU,CAC5B,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAO,EAAE;IAC9B,qBACE,oZAAC;QACC,MAAM;QACN,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,gWACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,MAAM,WAAW,GAAG"}},
    {"offset": {"line": 124, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 130, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/alex/testing-browser/audio-learning-hub/src/components/ui/select.tsx"],"sourcesContent":["import * as React from 'react';\r\nimport * as SelectPrimitive from '@radix-ui/react-select';\r\nimport { Check, ChevronDown } from 'lucide-react';\r\nimport { cn } from '@/lib/utils';\r\n\r\nconst Select = SelectPrimitive.Root;\r\n\r\nconst SelectGroup = SelectPrimitive.Group;\r\n\r\nconst SelectValue = SelectPrimitive.Value;\r\n\r\nconst SelectTrigger = React.forwardRef<\r\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\r\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\r\n>(({ className, children, ...props }, ref) => (\r\n  <SelectPrimitive.Trigger\r\n    ref={ref}\r\n    className={cn(\r\n      'flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50',\r\n      className\r\n    )}\r\n    {...props}\r\n  >\r\n    {children}\r\n    <SelectPrimitive.Icon asChild>\r\n      <ChevronDown className=\"h-4 w-4 opacity-50\" />\r\n    </SelectPrimitive.Icon>\r\n  </SelectPrimitive.Trigger>\r\n));\r\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName;\r\n\r\nconst SelectContent = React.forwardRef<\r\n  React.ElementRef<typeof SelectPrimitive.Content>,\r\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\r\n>(({ className, children, ...props }, ref) => (\r\n  <SelectPrimitive.Portal>\r\n    <SelectPrimitive.Content\r\n      ref={ref}\r\n      className={cn(\r\n        'relative z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2',\r\n        className\r\n      )}\r\n      {...props}\r\n    >\r\n      <SelectPrimitive.Viewport className=\"p-1\">\r\n        {children}\r\n      </SelectPrimitive.Viewport>\r\n    </SelectPrimitive.Content>\r\n  </SelectPrimitive.Portal>\r\n));\r\nSelectContent.displayName = SelectPrimitive.Content.displayName;\r\n\r\nconst SelectLabel = React.forwardRef<\r\n  React.ElementRef<typeof SelectPrimitive.Label>,\r\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\r\n>(({ className, ...props }, ref) => (\r\n  <SelectPrimitive.Label\r\n    ref={ref}\r\n    className={cn('py-1.5 pl-8 pr-2 text-sm font-semibold', className)}\r\n    {...props}\r\n  />\r\n));\r\nSelectLabel.displayName = SelectPrimitive.Label.displayName;\r\n\r\nconst SelectItem = React.forwardRef<\r\n  React.ElementRef<typeof SelectPrimitive.Item>,\r\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\r\n>(({ className, children, ...props }, ref) => (\r\n  <SelectPrimitive.Item\r\n    ref={ref}\r\n    className={cn(\r\n      'relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50',\r\n      className\r\n    )}\r\n    {...props}\r\n  >\r\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\r\n      <SelectPrimitive.ItemIndicator>\r\n        <Check className=\"h-4 w-4\" />\r\n      </SelectPrimitive.ItemIndicator>\r\n    </span>\r\n\r\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\r\n  </SelectPrimitive.Item>\r\n));\r\nSelectItem.displayName = SelectPrimitive.Item.displayName;\r\n\r\nexport {\r\n  Select,\r\n  SelectGroup,\r\n  SelectValue,\r\n  SelectTrigger,\r\n  SelectContent,\r\n  SelectLabel,\r\n  SelectItem,\r\n};"],"names":[],"mappings":";;;;;;;;;;AAAA;;;;;;AAGA;AAFA;;;;;;AAIA,MAAM,SAAS,6XAAgB,IAAI;AAEnC,MAAM,cAAc,6XAAgB,KAAK;AAEzC,MAAM,cAAc,6XAAgB,KAAK;AAEzC,MAAM,8BAAgB,4WAAM,UAAU,CAGpC,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE,oBACpC,oZAAC,6XAAgB,OAAO;QACtB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,6RACA;QAED,GAAG,KAAK;;YAER;0BACD,oZAAC,6XAAgB,IAAI;gBAAC,OAAO;0BAC3B,cAAA,oZAAC;oBAAY,WAAU;;;;;;;;;;;;;;;;;AAI7B,cAAc,WAAW,GAAG,6XAAgB,OAAO,CAAC,WAAW;AAE/D,MAAM,8BAAgB,4WAAM,UAAU,CAGpC,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE,oBACpC,oZAAC,6XAAgB,MAAM;kBACrB,cAAA,oZAAC,6XAAgB,OAAO;YACtB,KAAK;YACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,8bACA;YAED,GAAG,KAAK;sBAET,cAAA,oZAAC,6XAAgB,QAAQ;gBAAC,WAAU;0BACjC;;;;;;;;;;;;;;;;AAKT,cAAc,WAAW,GAAG,6XAAgB,OAAO,CAAC,WAAW;AAE/D,MAAM,4BAAc,4WAAM,UAAU,CAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,oZAAC,6XAAgB,KAAK;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,0CAA0C;QACvD,GAAG,KAAK;;;;;;AAGb,YAAY,WAAW,GAAG,6XAAgB,KAAK,CAAC,WAAW;AAE3D,MAAM,2BAAa,4WAAM,UAAU,CAGjC,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE,oBACpC,oZAAC,6XAAgB,IAAI;QACnB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,6NACA;QAED,GAAG,KAAK;;0BAET,oZAAC;gBAAK,WAAU;0BACd,cAAA,oZAAC,6XAAgB,aAAa;8BAC5B,cAAA,oZAAC;wBAAM,WAAU;;;;;;;;;;;;;;;;0BAIrB,oZAAC,6XAAgB,QAAQ;0BAAE;;;;;;;;;;;;AAG/B,WAAW,WAAW,GAAG,6XAAgB,IAAI,CAAC,WAAW"}},
    {"offset": {"line": 257, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 263, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/alex/testing-browser/audio-learning-hub/src/components/ui/scroll-area.tsx"],"sourcesContent":["import * as React from \"react\"\r\nimport * as ScrollAreaPrimitive from \"@radix-ui/react-scroll-area\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst ScrollArea = React.forwardRef<\r\n  React.ElementRef<typeof ScrollAreaPrimitive.Root>,\r\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.Root>\r\n>(({ className, children, ...props }, ref) => (\r\n  <ScrollAreaPrimitive.Root\r\n    ref={ref}\r\n    className={cn(\"relative overflow-hidden\", className)}\r\n    {...props}\r\n  >\r\n    <ScrollAreaPrimitive.Viewport className=\"h-full w-full rounded-[inherit]\">\r\n      {children}\r\n    </ScrollAreaPrimitive.Viewport>\r\n    <ScrollBar />\r\n    <ScrollAreaPrimitive.Corner />\r\n  </ScrollAreaPrimitive.Root>\r\n))\r\nScrollArea.displayName = ScrollAreaPrimitive.Root.displayName\r\n\r\nconst ScrollBar = React.forwardRef<\r\n  React.ElementRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>,\r\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>\r\n>(({ className, orientation = \"vertical\", ...props }, ref) => (\r\n  <ScrollAreaPrimitive.ScrollAreaScrollbar\r\n    ref={ref}\r\n    orientation={orientation}\r\n    className={cn(\r\n      \"flex touch-none select-none transition-colors\",\r\n      orientation === \"vertical\" &&\r\n        \"h-full w-2.5 border-l border-l-transparent p-[1px]\",\r\n      orientation === \"horizontal\" &&\r\n        \"h-2.5 border-t border-t-transparent p-[1px]\",\r\n      className\r\n    )}\r\n    {...props}\r\n  >\r\n    <ScrollAreaPrimitive.ScrollAreaThumb className=\"relative flex-1 rounded-full bg-border\" />\r\n  </ScrollAreaPrimitive.ScrollAreaScrollbar>\r\n))\r\nScrollBar.displayName = ScrollAreaPrimitive.ScrollAreaScrollbar.displayName\r\n\r\nexport { ScrollArea, ScrollBar }"],"names":[],"mappings":";;;;;AAAA;AAGA;AAFA;;;;;AAIA,MAAM,2BAAa,4WAAM,UAAU,CAGjC,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE,oBACpC,oZAAC,kYAAoB,IAAI;QACvB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,4BAA4B;QACzC,GAAG,KAAK;;0BAET,oZAAC,kYAAoB,QAAQ;gBAAC,WAAU;0BACrC;;;;;;0BAEH,oZAAC;;;;;0BACD,oZAAC,kYAAoB,MAAM;;;;;;;;;;;AAG/B,WAAW,WAAW,GAAG,kYAAoB,IAAI,CAAC,WAAW;AAE7D,MAAM,0BAAY,4WAAM,UAAU,CAGhC,CAAC,EAAE,SAAS,EAAE,cAAc,UAAU,EAAE,GAAG,OAAO,EAAE,oBACpD,oZAAC,kYAAoB,mBAAmB;QACtC,KAAK;QACL,aAAa;QACb,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,iDACA,gBAAgB,cACd,sDACF,gBAAgB,gBACd,+CACF;QAED,GAAG,KAAK;kBAET,cAAA,oZAAC,kYAAoB,eAAe;YAAC,WAAU;;;;;;;;;;;AAGnD,UAAU,WAAW,GAAG,kYAAoB,mBAAmB,CAAC,WAAW"}},
    {"offset": {"line": 324, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 330, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/alex/testing-browser/audio-learning-hub/src/lib/ollama/llm-manager.ts"],"sourcesContent":["import type { ChatMessage } from '../types';\r\n\r\ninterface LLMConfig {\r\n  model: string;\r\n  temperature?: number;\r\n  maxTokens?: number;\r\n}\r\n\r\ninterface LLMResponse {\r\n  content: string;\r\n  done: boolean;\r\n  error?: string;\r\n}\r\n\r\nexport class LLMManager {\r\n  private models: Map<string, LLMConfig>;\r\n  private activeModel: string;\r\n  private context: ChatMessage[];\r\n\r\n  constructor() {\r\n    this.models = new Map();\r\n    this.context = [];\r\n    \r\n    // Initialize with default models\r\n    this.addModel('mistral', { model: 'mistral', temperature: 0.7 });\r\n    this.addModel('llama2', { model: 'llama2', temperature: 0.7 });\r\n    this.addModel('codellama', { model: 'codellama', temperature: 0.5 });\r\n    \r\n    this.activeModel = 'mistral'; // Default model\r\n  }\r\n\r\n  addModel(name: string, config: LLMConfig): void {\r\n    this.models.set(name, config);\r\n  }\r\n\r\n  removeModel(name: string): void {\r\n    this.models.delete(name);\r\n    if (this.activeModel === name) {\r\n      const nextModel = this.models.keys().next().value;\r\n      if (!nextModel) {\r\n        throw new Error('Cannot remove last model');\r\n      }\r\n      this.activeModel = nextModel;\r\n    }\r\n  }\r\n\r\n  setActiveModel(name: string): void {\r\n    if (!this.models.has(name)) {\r\n      throw new Error(`Model ${name} not found`);\r\n    }\r\n    this.activeModel = name;\r\n  }\r\n\r\n  getActiveModel(): string {\r\n    return this.activeModel;\r\n  }\r\n\r\n  getAvailableModels(): string[] {\r\n    return Array.from(this.models.keys());\r\n  }\r\n\r\n  clearContext(): void {\r\n    this.context = [];\r\n  }\r\n\r\n  addContext(message: ChatMessage): void {\r\n    this.context.push(message);\r\n  }\r\n\r\n  async generateResponse(prompt: string): Promise<string> {\r\n    try {\r\n      const config = this.models.get(this.activeModel);\r\n      if (!config) {\r\n        throw new Error('No active model configured');\r\n      }\r\n\r\n      const messages = [\r\n        ...this.context,\r\n        {\r\n          id: Date.now().toString(),\r\n          role: 'user' as const,\r\n          content: prompt,\r\n          timestamp: Date.now(),\r\n        },\r\n      ];\r\n\r\n      const response = await fetch('http://localhost:11434/api/chat', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          model: config.model,\r\n          messages: messages.map(m => ({\r\n            role: m.role,\r\n            content: m.content,\r\n          })),\r\n          stream: false,\r\n          options: {\r\n            temperature: config.temperature,\r\n            max_tokens: config.maxTokens,\r\n          },\r\n        }),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error(`Ollama API error: ${response.statusText}`);\r\n      }\r\n\r\n      const result: LLMResponse = await response.json();\r\n      \r\n      if (result.error) {\r\n        throw new Error(`Model error: ${result.error}`);\r\n      }\r\n\r\n      // Add response to context\r\n      this.addContext({\r\n        id: Date.now().toString(),\r\n        role: 'assistant',\r\n        content: result.content,\r\n        timestamp: Date.now(),\r\n      });\r\n\r\n      return result.content;\r\n    } catch (error: unknown) {\r\n      console.error('Error generating response:', error);\r\n      throw new Error(`Failed to generate response: ${error instanceof Error ? error.message : 'Unknown error'}`);\r\n    }\r\n  }\r\n\r\n  async generateStreamingResponse(prompt: string, onChunk: (chunk: string) => void): Promise<void> {\r\n    try {\r\n      const config = this.models.get(this.activeModel);\r\n      if (!config) {\r\n        throw new Error('No active model configured');\r\n      }\r\n\r\n      const messages = [\r\n        ...this.context,\r\n        {\r\n          id: Date.now().toString(),\r\n          role: 'user' as const,\r\n          content: prompt,\r\n          timestamp: Date.now(),\r\n        },\r\n      ];\r\n\r\n      const response = await fetch('http://localhost:11434/api/chat', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          model: config.model,\r\n          messages: messages.map(m => ({\r\n            role: m.role,\r\n            content: m.content,\r\n          })),\r\n          stream: true,\r\n          options: {\r\n            temperature: config.temperature,\r\n            max_tokens: config.maxTokens,\r\n          },\r\n        }),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error(`Ollama API error: ${response.statusText}`);\r\n      }\r\n\r\n      if (!response.body) {\r\n        throw new Error('No response body');\r\n      }\r\n\r\n      const reader = response.body.getReader();\r\n      const decoder = new TextDecoder();\r\n      let fullResponse = '';\r\n\r\n      while (true) {\r\n        const { done, value } = await reader.read();\r\n        if (done) break;\r\n\r\n        const chunk = decoder.decode(value);\r\n        const lines = chunk.split('\\n').filter(Boolean);\r\n        \r\n        for (const line of lines) {\r\n          const data = JSON.parse(line);\r\n          if (data.error) {\r\n            throw new Error(`Model error: ${data.error}`);\r\n          }\r\n          if (data.content) {\r\n            onChunk(data.content);\r\n            fullResponse += data.content;\r\n          }\r\n        }\r\n      }\r\n\r\n      // Add complete response to context\r\n      this.addContext({\r\n        id: Date.now().toString(),\r\n        role: 'assistant',\r\n        content: fullResponse,\r\n        timestamp: Date.now(),\r\n      });\r\n\r\n    } catch (error: unknown) {\r\n      console.error('Error generating streaming response:', error);\r\n      throw new Error(`Failed to generate streaming response: ${error instanceof Error ? error.message : 'Unknown error'}`);\r\n    }\r\n  }\r\n}\r\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 510, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 516, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/alex/testing-browser/audio-learning-hub/src/lib/storage/chat-storage.ts"],"sourcesContent":["import type { ChatMessage } from '../types';\r\n\r\nexport interface StoredChat {\r\n  id: string;\r\n  messages: ChatMessage[];\r\n  model: string;\r\n  lastUpdated: number;\r\n}\r\n\r\nconst CHATS_KEY = 'audio-learning-hub-chats';\r\n\r\nexport class ChatStorage {\r\n  private static instance: ChatStorage;\r\n  private chats: Map<string, StoredChat>;\r\n\r\n  private constructor() {\r\n    this.chats = new Map();\r\n    this.loadFromStorage();\r\n  }\r\n\r\n  static getInstance(): ChatStorage {\r\n    if (!ChatStorage.instance) {\r\n      ChatStorage.instance = new ChatStorage();\r\n    }\r\n    return ChatStorage.instance;\r\n  }\r\n\r\n  private loadFromStorage(): void {\r\n    try {\r\n      const storedChats = localStorage.getItem(CHATS_KEY);\r\n      if (storedChats) {\r\n        const chatsArray: StoredChat[] = JSON.parse(storedChats);\r\n        this.chats = new Map(chatsArray.map(chat => [chat.id, chat]));\r\n      }\r\n    } catch (error) {\r\n      console.error('Error loading chats from storage:', error);\r\n    }\r\n  }\r\n\r\n  private saveToStorage(): void {\r\n    try {\r\n      const chatsArray = Array.from(this.chats.values());\r\n      localStorage.setItem(CHATS_KEY, JSON.stringify(chatsArray));\r\n    } catch (error) {\r\n      console.error('Error saving chats to storage:', error);\r\n    }\r\n  }\r\n\r\n  createChat(model: string): StoredChat {\r\n    const chat: StoredChat = {\r\n      id: Date.now().toString(),\r\n      messages: [],\r\n      model,\r\n      lastUpdated: Date.now(),\r\n    };\r\n    this.chats.set(chat.id, chat);\r\n    this.saveToStorage();\r\n    return chat;\r\n  }\r\n\r\n  getChat(id: string): StoredChat | undefined {\r\n    return this.chats.get(id);\r\n  }\r\n\r\n  getAllChats(): StoredChat[] {\r\n    return Array.from(this.chats.values())\r\n      .sort((a, b) => b.lastUpdated - a.lastUpdated);\r\n  }\r\n\r\n  updateChat(id: string, messages: ChatMessage[], model: string): void {\r\n    const chat = this.chats.get(id);\r\n    if (chat) {\r\n      chat.messages = messages;\r\n      chat.model = model;\r\n      chat.lastUpdated = Date.now();\r\n      this.saveToStorage();\r\n    }\r\n  }\r\n\r\n  deleteChat(id: string): void {\r\n    this.chats.delete(id);\r\n    this.saveToStorage();\r\n  }\r\n\r\n  exportChat(id: string): string {\r\n    const chat = this.chats.get(id);\r\n    if (!chat) {\r\n      throw new Error(`Chat not found: ${id}`);\r\n    }\r\n    return JSON.stringify(chat, null, 2);\r\n  }\r\n\r\n  importChat(chatData: string): StoredChat {\r\n    try {\r\n      const chat: StoredChat = JSON.parse(chatData);\r\n      if (!chat.id || !Array.isArray(chat.messages) || !chat.model) {\r\n        throw new Error('Invalid chat data format');\r\n      }\r\n      \r\n      // Ensure unique ID\r\n      chat.id = Date.now().toString();\r\n      chat.lastUpdated = Date.now();\r\n      \r\n      this.chats.set(chat.id, chat);\r\n      this.saveToStorage();\r\n      return chat;\r\n    } catch (error) {\r\n      throw new Error(`Failed to import chat: ${error instanceof Error ? error.message : 'Unknown error'}`);\r\n    }\r\n  }\r\n\r\n  clearAllChats(): void {\r\n    this.chats.clear();\r\n    this.saveToStorage();\r\n  }\r\n}\r\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 613, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 619, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/alex/testing-browser/audio-learning-hub/src/components/chat-panel.tsx"],"sourcesContent":["import { useState, useRef, useEffect, useCallback } from 'react';\r\nimport { Button } from './ui/button';\r\nimport { Input } from './ui/input';\r\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from './ui/select';\r\nimport { ScrollArea } from './ui/scroll-area';\r\nimport { LLMManager } from '../lib/ollama/llm-manager';\r\nimport type { ChatMessage } from '../lib/types';\r\nimport { ChatStorage, type StoredChat } from '../lib/storage/chat-storage';\r\n\r\ninterface ChatPanelProps {\r\n  currentChat: StoredChat;\r\n  onChatUpdate: (chat: StoredChat) => void;\r\n}\r\n\r\nexport function ChatPanel({ currentChat, onChatUpdate }: ChatPanelProps) {\r\n  const [input, setInput] = useState('');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [selectedModel, setSelectedModel] = useState(currentChat.model);\r\n  const scrollRef = useRef<HTMLDivElement>(null);\r\n  const llmManager = useRef(new LLMManager()).current;\r\n  const chatStorage = useRef(ChatStorage.getInstance()).current;\r\n\r\n  const models = llmManager.getAvailableModels();\r\n\r\n  useEffect(() => {\r\n    if (scrollRef.current) {\r\n      scrollRef.current.scrollTop = scrollRef.current.scrollHeight;\r\n    }\r\n  }, [currentChat.messages]);\r\n\r\n  const handleModelChange = useCallback((model: string) => {\r\n    setSelectedModel(model);\r\n    llmManager.setActiveModel(model);\r\n    chatStorage.updateChat(currentChat.id, currentChat.messages, model);\r\n    onChatUpdate({\r\n      ...currentChat,\r\n      model,\r\n    });\r\n  }, [currentChat, llmManager, onChatUpdate]);\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    if (!input.trim() || isLoading) return;\r\n\r\n    const userMessage: ChatMessage = {\r\n      id: Date.now().toString(),\r\n      role: 'user' as const,\r\n      content: input,\r\n      timestamp: Date.now(),\r\n    };\r\n\r\n    const updatedMessages = [...currentChat.messages, userMessage];\r\n    onChatUpdate({\r\n      ...currentChat,\r\n      messages: updatedMessages,\r\n    });\r\n    chatStorage.updateChat(currentChat.id, updatedMessages, selectedModel);\r\n\r\n    setInput('');\r\n    setIsLoading(true);\r\n\r\n    try {\r\n      let response = '';\r\n      await llmManager.generateStreamingResponse(input, (chunk) => {\r\n        response += chunk;\r\n        const messages = currentChat.messages;\r\n        const lastMessage = messages[messages.length - 1];\r\n        \r\n        const updatedMessages = lastMessage?.role === 'assistant'\r\n          ? [...messages.slice(0, -1), { ...lastMessage, content: response }]\r\n          : [...messages, {\r\n              id: Date.now().toString(),\r\n              role: 'assistant' as const,\r\n              content: response,\r\n              timestamp: Date.now(),\r\n            }];\r\n\r\n        chatStorage.updateChat(currentChat.id, updatedMessages, selectedModel);\r\n        onChatUpdate({\r\n          ...currentChat,\r\n          messages: updatedMessages,\r\n        });\r\n      });\r\n    } catch (error) {\r\n      console.error('Error generating response:', error);\r\n      const errorMessage: ChatMessage = {\r\n        id: Date.now().toString(),\r\n        role: 'assistant' as const,\r\n        content: 'Sorry, there was an error generating a response.',\r\n        timestamp: Date.now(),\r\n      };\r\n\r\n      const updatedMessages = [...currentChat.messages, errorMessage];\r\n      onChatUpdate({\r\n        ...currentChat,\r\n        messages: updatedMessages,\r\n      });\r\n      chatStorage.updateChat(currentChat.id, updatedMessages, selectedModel);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const exportChat = useCallback(() => {\r\n    if (!currentChat) return;\r\n    \r\n    const chatJson = chatStorage.exportChat(currentChat.id);\r\n    const blob = new Blob([chatJson], { type: 'application/json' });\r\n    const url = URL.createObjectURL(blob);\r\n    const a = document.createElement('a');\r\n    a.href = url;\r\n    a.download = `chat-export-${new Date().toISOString()}.json`;\r\n    document.body.appendChild(a);\r\n    a.click();\r\n    document.body.removeChild(a);\r\n    URL.revokeObjectURL(url);\r\n  }, [currentChat]);\r\n\r\n  const clearChat = useCallback(() => {\r\n    const newChat = chatStorage.createChat(selectedModel);\r\n    onChatUpdate(newChat);\r\n    llmManager.clearContext();\r\n  }, [selectedModel, llmManager, onChatUpdate]);\r\n\r\n  const deleteChat = useCallback(() => {\r\n    chatStorage.deleteChat(currentChat.id);\r\n    const chats = chatStorage.getAllChats();\r\n    \r\n    if (chats.length > 0) {\r\n      onChatUpdate(chats[0]);\r\n      setSelectedModel(chats[0].model);\r\n    } else {\r\n      const newChat = chatStorage.createChat(selectedModel);\r\n      onChatUpdate(newChat);\r\n    }\r\n    \r\n    llmManager.clearContext();\r\n  }, [currentChat.id, selectedModel, llmManager, onChatUpdate]);\r\n\r\n  return (\r\n    <div className=\"flex flex-col h-full border rounded-lg p-4 gap-4\">\r\n      <div className=\"flex items-center justify-between\">\r\n        <Select value={selectedModel} onValueChange={handleModelChange}>\r\n          <SelectTrigger className=\"w-40\">\r\n            <SelectValue placeholder=\"Select model\" />\r\n          </SelectTrigger>\r\n          <SelectContent>\r\n            {models.map(model => (\r\n              <SelectItem key={model} value={model}>\r\n                {model}\r\n              </SelectItem>\r\n            ))}\r\n          </SelectContent>\r\n        </Select>\r\n        <div className=\"flex gap-2\">\r\n          <Button onClick={exportChat} variant=\"outline\" size=\"sm\">\r\n            Export\r\n          </Button>\r\n          <Button onClick={clearChat} variant=\"outline\" size=\"sm\">\r\n            New Chat\r\n          </Button>\r\n          <Button onClick={deleteChat} variant=\"outline\" size=\"sm\">\r\n            Delete\r\n          </Button>\r\n        </div>\r\n      </div>\r\n\r\n      <ScrollArea ref={scrollRef} className=\"flex-1 p-4\">\r\n        <div className=\"space-y-4\">\r\n          {currentChat?.messages.map((message) => (\r\n            <div\r\n              key={message.id}\r\n              className={`flex ${\r\n                message.role === 'user' ? 'justify-end' : 'justify-start'\r\n              }`}\r\n            >\r\n              <div\r\n                className={`max-w-[80%] rounded-lg p-3 ${\r\n                  message.role === 'user'\r\n                    ? 'bg-blue-500 text-white'\r\n                    : 'bg-gray-100'\r\n                }`}\r\n              >\r\n                <p className=\"whitespace-pre-wrap\">{message.content}</p>\r\n                <span className=\"text-xs opacity-50 mt-1 block\">\r\n                  {new Date(message.timestamp).toLocaleTimeString()}\r\n                </span>\r\n              </div>\r\n            </div>\r\n          ))}\r\n          {isLoading && (\r\n            <div className=\"flex justify-start\">\r\n              <div className=\"bg-gray-100 rounded-lg p-3\">\r\n                <div className=\"animate-pulse\">Thinking...</div>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </ScrollArea>\r\n\r\n      <form onSubmit={handleSubmit} className=\"flex gap-2\">\r\n        <Input\r\n          value={input}\r\n          onChange={(e) => setInput(e.target.value)}\r\n          placeholder=\"Type your message...\"\r\n          disabled={isLoading}\r\n          className=\"flex-1\"\r\n        />\r\n        <Button type=\"submit\" disabled={isLoading}>\r\n          Send\r\n        </Button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 976, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 982, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/alex/testing-browser/audio-learning-hub/src/components/chat-list.tsx"],"sourcesContent":["import { useCallback } from 'react';\r\nimport { Button } from './ui/button';\r\nimport { ScrollArea } from './ui/scroll-area';\r\nimport { ChatStorage, type StoredChat } from '../lib/storage/chat-storage';\r\n\r\ninterface ChatListProps {\r\n  chats: StoredChat[];\r\n  currentChat: StoredChat | null;\r\n  onSelectChat: (chat: StoredChat) => void;\r\n  onNewChat: () => void;\r\n  onDeleteChat: (chatId: string) => void;\r\n}\r\n\r\nexport function ChatList({ chats, currentChat, onSelectChat, onNewChat, onDeleteChat }: ChatListProps) {\r\n  const formatDate = useCallback((timestamp: number) => {\r\n    const date = new Date(timestamp);\r\n    const today = new Date();\r\n    const yesterday = new Date(today);\r\n    yesterday.setDate(yesterday.getDate() - 1);\r\n\r\n    if (date.toDateString() === today.toDateString()) {\r\n      return `Today at ${date.toLocaleTimeString()}`;\r\n    } else if (date.toDateString() === yesterday.toDateString()) {\r\n      return `Yesterday at ${date.toLocaleTimeString()}`;\r\n    } else {\r\n      return date.toLocaleDateString();\r\n    }\r\n  }, []);\r\n\r\n  const getPreview = useCallback((chat: StoredChat) => {\r\n    const lastMessage = chat.messages[chat.messages.length - 1];\r\n    if (!lastMessage) return 'New conversation';\r\n    \r\n    const preview = lastMessage.content.slice(0, 50);\r\n    return preview.length < lastMessage.content.length\r\n      ? `${preview}...`\r\n      : preview;\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"flex flex-col h-full border-r\">\r\n      <div className=\"p-4 border-b\">\r\n        <Button onClick={onNewChat} className=\"w-full\">\r\n          New Chat\r\n        </Button>\r\n      </div>\r\n\r\n      <ScrollArea className=\"flex-1\">\r\n        <div className=\"space-y-2 p-4\">\r\n          {chats.map((chat) => (\r\n            <div\r\n              key={chat.id}\r\n              className={`p-3 rounded-lg cursor-pointer hover:bg-gray-100 transition-colors ${\r\n                currentChat?.id === chat.id ? 'bg-gray-100' : ''\r\n              }`}\r\n              onClick={() => onSelectChat(chat)}\r\n            >\r\n              <div className=\"flex items-center justify-between\">\r\n                <span className=\"font-medium\">{chat.model}</span>\r\n                <span className=\"text-xs text-gray-500\">\r\n                  {formatDate(chat.lastUpdated)}\r\n                </span>\r\n              </div>\r\n              <p className=\"text-sm text-gray-600 mt-1 line-clamp-2\">\r\n                {getPreview(chat)}\r\n              </p>\r\n              {currentChat?.id === chat.id && (\r\n                <Button\r\n                  variant=\"ghost\"\r\n                  size=\"sm\"\r\n                  className=\"mt-2 text-red-500 hover:text-red-600 hover:bg-red-50\"\r\n                  onClick={(e) => {\r\n                    e.stopPropagation();\r\n                    onDeleteChat(chat.id);\r\n                  }}\r\n                >\r\n                  Delete\r\n                </Button>\r\n              )}\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </ScrollArea>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;;;;;AAWO,SAAS,SAAS,EAAE,KAAK,EAAE,WAAW,EAAE,YAAY,EAAE,SAAS,EAAE,YAAY,EAAiB;IACnG,MAAM,aAAa,CAAA,GAAA,2WAAA,CAAA,cAAW,AAAD,EAAE,CAAC;QAC9B,MAAM,OAAO,IAAI,KAAK;QACtB,MAAM,QAAQ,IAAI;QAClB,MAAM,YAAY,IAAI,KAAK;QAC3B,UAAU,OAAO,CAAC,UAAU,OAAO,KAAK;QAExC,IAAI,KAAK,YAAY,OAAO,MAAM,YAAY,IAAI;YAChD,OAAO,CAAC,SAAS,EAAE,KAAK,kBAAkB,IAAI;QAChD,OAAO,IAAI,KAAK,YAAY,OAAO,UAAU,YAAY,IAAI;YAC3D,OAAO,CAAC,aAAa,EAAE,KAAK,kBAAkB,IAAI;QACpD,OAAO;YACL,OAAO,KAAK,kBAAkB;QAChC;IACF,GAAG,EAAE;IAEL,MAAM,aAAa,CAAA,GAAA,2WAAA,CAAA,cAAW,AAAD,EAAE,CAAC;QAC9B,MAAM,cAAc,KAAK,QAAQ,CAAC,KAAK,QAAQ,CAAC,MAAM,GAAG,EAAE;QAC3D,IAAI,CAAC,aAAa,OAAO;QAEzB,MAAM,UAAU,YAAY,OAAO,CAAC,KAAK,CAAC,GAAG;QAC7C,OAAO,QAAQ,MAAM,GAAG,YAAY,OAAO,CAAC,MAAM,GAC9C,GAAG,QAAQ,GAAG,CAAC,GACf;IACN,GAAG,EAAE;IAEL,qBACE,oZAAC;QAAI,WAAU;;0BACb,oZAAC;gBAAI,WAAU;0BACb,cAAA,oZAAC,kIAAA,CAAA,SAAM;oBAAC,SAAS;oBAAW,WAAU;8BAAS;;;;;;;;;;;0BAKjD,oZAAC,0IAAA,CAAA,aAAU;gBAAC,WAAU;0BACpB,cAAA,oZAAC;oBAAI,WAAU;8BACZ,MAAM,GAAG,CAAC,CAAC,qBACV,oZAAC;4BAEC,WAAW,CAAC,kEAAkE,EAC5E,aAAa,OAAO,KAAK,EAAE,GAAG,gBAAgB,IAC9C;4BACF,SAAS,IAAM,aAAa;;8CAE5B,oZAAC;oCAAI,WAAU;;sDACb,oZAAC;4CAAK,WAAU;sDAAe,KAAK,KAAK;;;;;;sDACzC,oZAAC;4CAAK,WAAU;sDACb,WAAW,KAAK,WAAW;;;;;;;;;;;;8CAGhC,oZAAC;oCAAE,WAAU;8CACV,WAAW;;;;;;gCAEb,aAAa,OAAO,KAAK,EAAE,kBAC1B,oZAAC,kIAAA,CAAA,SAAM;oCACL,SAAQ;oCACR,MAAK;oCACL,WAAU;oCACV,SAAS,CAAC;wCACR,EAAE,eAAe;wCACjB,aAAa,KAAK,EAAE;oCACtB;8CACD;;;;;;;2BAxBE,KAAK,EAAE;;;;;;;;;;;;;;;;;;;;;AAkC1B"}},
    {"offset": {"line": 1110, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1116, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/alex/testing-browser/audio-learning-hub/src/components/chat-container.tsx"],"sourcesContent":["import { useState, useEffect, useCallback } from 'react';\r\nimport { ChatPanel } from './chat-panel';\r\nimport { ChatList } from './chat-list';\r\nimport { ChatStorage, type StoredChat } from '../lib/storage/chat-storage';\r\n\r\nexport function ChatContainer() {\r\n  const [chats, setChats] = useState<StoredChat[]>([]);\r\n  const [currentChat, setCurrentChat] = useState<StoredChat | null>(null);\r\n  const chatStorage = ChatStorage.getInstance();\r\n\r\n  useEffect(() => {\r\n    // Load initial chats\r\n    const loadedChats = chatStorage.getAllChats();\r\n    setChats(loadedChats);\r\n    if (loadedChats.length > 0) {\r\n      setCurrentChat(loadedChats[0]);\r\n    }\r\n  }, []);\r\n\r\n  const handleSelectChat = useCallback((chat: StoredChat) => {\r\n    setCurrentChat(chat);\r\n  }, []);\r\n\r\n  const handleNewChat = useCallback(() => {\r\n    const newChat = chatStorage.createChat('mistral');\r\n    setChats(prev => [newChat, ...prev]);\r\n    setCurrentChat(newChat);\r\n  }, []);\r\n\r\n  const handleDeleteChat = useCallback((chatId: string) => {\r\n    chatStorage.deleteChat(chatId);\r\n    const updatedChats = chatStorage.getAllChats();\r\n    setChats(updatedChats);\r\n    \r\n    if (currentChat?.id === chatId) {\r\n      setCurrentChat(updatedChats.length > 0 ? updatedChats[0] : null);\r\n    }\r\n  }, [currentChat]);\r\n\r\n  // Update chats list when current chat changes\r\n  useEffect(() => {\r\n    if (currentChat) {\r\n      setChats(prev => {\r\n        const index = prev.findIndex(chat => chat.id === currentChat.id);\r\n        if (index === -1) return prev;\r\n        \r\n        const updated = [...prev];\r\n        updated[index] = currentChat;\r\n        return updated.sort((a, b) => b.lastUpdated - a.lastUpdated);\r\n      });\r\n    }\r\n  }, [currentChat]);\r\n\r\n  return (\r\n    <div className=\"flex h-screen\">\r\n      <div className=\"w-80 border-r\">\r\n        <ChatList\r\n          chats={chats}\r\n          currentChat={currentChat}\r\n          onSelectChat={handleSelectChat}\r\n          onNewChat={handleNewChat}\r\n          onDeleteChat={handleDeleteChat}\r\n        />\r\n      </div>\r\n      <div className=\"flex-1\">\r\n        {currentChat ? (\r\n          <ChatPanel\r\n            key={currentChat.id}\r\n            currentChat={currentChat}\r\n            onChatUpdate={setCurrentChat}\r\n          />\r\n        ) : (\r\n          <div className=\"flex items-center justify-center h-full text-gray-500\">\r\n            Select a chat or create a new one to get started\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;AACA;;;;;;AAEO,SAAS;IACd,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,2WAAA,CAAA,WAAQ,AAAD,EAAgB,EAAE;IACnD,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,2WAAA,CAAA,WAAQ,AAAD,EAAqB;IAClE,MAAM,cAAc,wIAAA,CAAA,cAAW,CAAC,WAAW;IAE3C,CAAA,GAAA,2WAAA,CAAA,YAAS,AAAD,EAAE;QACR,qBAAqB;QACrB,MAAM,cAAc,YAAY,WAAW;QAC3C,SAAS;QACT,IAAI,YAAY,MAAM,GAAG,GAAG;YAC1B,eAAe,WAAW,CAAC,EAAE;QAC/B;IACF,GAAG,EAAE;IAEL,MAAM,mBAAmB,CAAA,GAAA,2WAAA,CAAA,cAAW,AAAD,EAAE,CAAC;QACpC,eAAe;IACjB,GAAG,EAAE;IAEL,MAAM,gBAAgB,CAAA,GAAA,2WAAA,CAAA,cAAW,AAAD,EAAE;QAChC,MAAM,UAAU,YAAY,UAAU,CAAC;QACvC,SAAS,CAAA,OAAQ;gBAAC;mBAAY;aAAK;QACnC,eAAe;IACjB,GAAG,EAAE;IAEL,MAAM,mBAAmB,CAAA,GAAA,2WAAA,CAAA,cAAW,AAAD,EAAE,CAAC;QACpC,YAAY,UAAU,CAAC;QACvB,MAAM,eAAe,YAAY,WAAW;QAC5C,SAAS;QAET,IAAI,aAAa,OAAO,QAAQ;YAC9B,eAAe,aAAa,MAAM,GAAG,IAAI,YAAY,CAAC,EAAE,GAAG;QAC7D;IACF,GAAG;QAAC;KAAY;IAEhB,8CAA8C;IAC9C,CAAA,GAAA,2WAAA,CAAA,YAAS,AAAD,EAAE;QACR,IAAI,aAAa;YACf,SAAS,CAAA;gBACP,MAAM,QAAQ,KAAK,SAAS,CAAC,CAAA,OAAQ,KAAK,EAAE,KAAK,YAAY,EAAE;gBAC/D,IAAI,UAAU,CAAC,GAAG,OAAO;gBAEzB,MAAM,UAAU;uBAAI;iBAAK;gBACzB,OAAO,CAAC,MAAM,GAAG;gBACjB,OAAO,QAAQ,IAAI,CAAC,CAAC,GAAG,IAAM,EAAE,WAAW,GAAG,EAAE,WAAW;YAC7D;QACF;IACF,GAAG;QAAC;KAAY;IAEhB,qBACE,oZAAC;QAAI,WAAU;;0BACb,oZAAC;gBAAI,WAAU;0BACb,cAAA,oZAAC,kIAAA,CAAA,WAAQ;oBACP,OAAO;oBACP,aAAa;oBACb,cAAc;oBACd,WAAW;oBACX,cAAc;;;;;;;;;;;0BAGlB,oZAAC;gBAAI,WAAU;0BACZ,4BACC,oZAAC,mIAAA,CAAA,YAAS;oBAER,aAAa;oBACb,cAAc;mBAFT,YAAY,EAAE;;;;yCAKrB,oZAAC;oBAAI,WAAU;8BAAwD;;;;;;;;;;;;;;;;;AAOjF"}},
    {"offset": {"line": 1228, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1234, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/alex/testing-browser/audio-learning-hub/src/app/page.tsx"],"sourcesContent":["import { ChatContainer } from '@/components/chat-container';\n\nexport default function Home() {\n  return (\n    <main className=\"min-h-screen\">\n      <ChatContainer />\n    </main>\n  );\n}\n"],"names":[],"mappings":";;;;AAAA;;;AAEe,SAAS;IACtB,qBACE,oZAAC;QAAK,WAAU;kBACd,cAAA,oZAAC,uIAAA,CAAA,gBAAa;;;;;;;;;;AAGpB"}},
    {"offset": {"line": 1255, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1266, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 1266, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}