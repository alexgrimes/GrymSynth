{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/alex/testing-browser/audio-learning-hub/src/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from 'clsx';\r\nimport { twMerge } from 'tailwind-merge';\r\n\r\nexport function cn(...inputs: ClassValue[]) {\r\n  return twMerge(clsx(inputs));\r\n}\r\n\r\nexport function formatDate(date: Date) {\r\n  return new Intl.DateTimeFormat('en-US', {\r\n    dateStyle: 'medium',\r\n  }).format(date);\r\n}\r\n\r\nexport function truncate(text: string, length: number) {\r\n  return text.length > length\r\n    ? text.slice(0, length) + '...'\r\n    : text;\r\n}"],"names":[],"mappings":";;;;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,4NAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,yLAAA,CAAA,OAAI,AAAD,EAAE;AACtB;AAEO,SAAS,WAAW,IAAU;IACnC,OAAO,IAAI,KAAK,cAAc,CAAC,SAAS;QACtC,WAAW;IACb,GAAG,MAAM,CAAC;AACZ;AAEO,SAAS,SAAS,IAAY,EAAE,MAAc;IACnD,OAAO,KAAK,MAAM,GAAG,SACjB,KAAK,KAAK,CAAC,GAAG,UAAU,QACxB;AACN"}},
    {"offset": {"line": 30, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 36, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/alex/testing-browser/audio-learning-hub/src/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\r\nimport { cva, type VariantProps } from \"class-variance-authority\"\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst buttonVariants = cva(\r\n  \"inline-flex items-center justify-center rounded-md text-sm font-medium\",\r\n  {\r\n    variants: {\r\n      variant: {\r\n        default: \"bg-primary text-white\",\r\n        outline: \"border border-input bg-transparent\",\r\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\r\n      },\r\n      size: {\r\n        default: \"h-10 px-4 py-2\",\r\n        sm: \"h-9 px-3\",\r\n        lg: \"h-11 px-8\",\r\n      },\r\n    },\r\n    defaultVariants: {\r\n      variant: \"default\",\r\n      size: \"default\",\r\n    },\r\n  }\r\n)\r\n\r\ninterface ButtonProps\r\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\r\n    VariantProps<typeof buttonVariants> {}\r\n\r\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\r\n  ({ className, variant, size, ...props }, ref) => {\r\n    return (\r\n      <button\r\n        className={cn(buttonVariants({ variant, size, className }))}\r\n        ref={ref}\r\n        {...props}\r\n      />\r\n    )\r\n  }\r\n)\r\nButton.displayName = \"Button\"\r\n\r\nexport { Button, buttonVariants }\r\n"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;;;;;AAEA,MAAM,iBAAiB,CAAA,GAAA,8OAAA,CAAA,MAAG,AAAD,EACvB,0EACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,SAAS;YACT,OAAO;QACT;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;QACN;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AAOF,MAAM,uBAAS,oUAAM,UAAU,MAC7B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,GAAG,OAAO,EAAE;IACvC,qBACE,mWAAC;QACC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACxD,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;;AAEF,OAAO,WAAW,GAAG"}},
    {"offset": {"line": 90, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 96, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/alex/testing-browser/audio-learning-hub/src/components/ui/scroll-area.tsx"],"sourcesContent":["import * as React from \"react\"\r\nimport * as ScrollAreaPrimitive from \"@radix-ui/react-scroll-area\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst ScrollArea = React.forwardRef<\r\n  React.ElementRef<typeof ScrollAreaPrimitive.Root>,\r\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.Root>\r\n>(({ className, children, ...props }, forwardedRef) => (\r\n  <ScrollAreaPrimitive.Root\r\n    className={cn(\"relative overflow-hidden\", className)}\r\n    {...props}\r\n  >\r\n    <ScrollAreaPrimitive.Viewport \r\n      ref={forwardedRef}\r\n      className=\"h-full w-full rounded-[inherit]\"\r\n    >\r\n      {children}\r\n    </ScrollAreaPrimitive.Viewport>\r\n    <ScrollBar />\r\n    <ScrollAreaPrimitive.Corner />\r\n  </ScrollAreaPrimitive.Root>\r\n))\r\nScrollArea.displayName = \"ScrollArea\"\r\n\r\nconst ScrollBar = React.forwardRef<\r\n  React.ElementRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>,\r\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>\r\n>(({ className, orientation = \"vertical\", ...props }, forwardedRef) => (\r\n  <ScrollAreaPrimitive.ScrollAreaScrollbar\r\n    ref={forwardedRef}\r\n    orientation={orientation}\r\n    className={cn(\r\n      \"flex touch-none select-none transition-colors\",\r\n      orientation === \"vertical\" &&\r\n        \"h-full w-2.5 border-l border-l-transparent p-[1px]\",\r\n      orientation === \"horizontal\" &&\r\n        \"h-2.5 border-t border-t-transparent p-[1px]\",\r\n      className\r\n    )}\r\n    {...props}\r\n  >\r\n    <ScrollAreaPrimitive.ScrollAreaThumb className=\"relative flex-1 rounded-full bg-border\" />\r\n  </ScrollAreaPrimitive.ScrollAreaScrollbar>\r\n))\r\nScrollBar.displayName = \"ScrollBar\"\r\n\r\nexport { ScrollArea, ScrollBar }\r\n"],"names":[],"mappings":";;;;;AAAA;AAGA;AAFA;;;;;AAIA,MAAM,2BAAa,oUAAM,UAAU,MAGjC,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE,6BACpC,mWAAC,qYAAoB,IAAI;QACvB,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,4BAA4B;QACzC,GAAG,KAAK;;0BAET,mWAAC,qYAAoB,QAAQ;gBAC3B,KAAK;gBACL,WAAU;0BAET;;;;;;0BAEH,mWAAC;;;;;0BACD,mWAAC,qYAAoB,MAAM;;;;;;;;;;;;AAG/B,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,oUAAM,UAAU,CAGhC,CAAC,EAAE,SAAS,EAAE,cAAc,UAAU,EAAE,GAAG,OAAO,EAAE,6BACpD,mWAAC,qYAAoB,mBAAmB;QACtC,KAAK;QACL,aAAa;QACb,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,iDACA,gBAAgB,cACd,sDACF,gBAAgB,gBACd,+CACF;QAED,GAAG,KAAK;kBAET,cAAA,mWAAC,qYAAoB,eAAe;YAAC,WAAU;;;;;;;;;;;MAjB7C;AAoBN,UAAU,WAAW,GAAG"}},
    {"offset": {"line": 166, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 172, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/alex/testing-browser/audio-learning-hub/src/components/chat-panel.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { useState, useRef, useEffect } from 'react';\r\nimport { Button } from './ui/button';\r\nimport { ScrollArea } from './ui/scroll-area';\r\nimport { LLMManager } from '../lib/ollama/llm-manager';\r\n\r\ninterface Message {\r\n  role: 'user' | 'assistant';\r\n  content: string;\r\n}\r\n\r\ninterface ChatPanelProps {\r\n  llm: LLMManager;\r\n  modelId: string;\r\n  onModelChange: (model: string) => void;\r\n}\r\n\r\nexport function ChatPanel({ llm, modelId, onModelChange }: ChatPanelProps) {\r\n  const [messages, setMessages] = useState<Message[]>([]);\r\n  const [input, setInput] = useState('');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const scrollRef = useRef<HTMLDivElement>(null);\r\n\r\n  // Update active model when modelId changes\r\n  useEffect(() => {\r\n    llm.setActiveModel(modelId);\r\n  }, [llm, modelId]);\r\n\r\n  // Auto scroll to bottom when messages change\r\n  useEffect(() => {\r\n    if (scrollRef.current) {\r\n      scrollRef.current.scrollIntoView({ behavior: 'smooth' });\r\n    }\r\n  }, [messages]);\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    if (!input.trim() || isLoading) return;\r\n\r\n    const userMessage = input.trim();\r\n    setInput('');\r\n    setIsLoading(true);\r\n\r\n    // Add user message immediately\r\n    setMessages(prev => [...prev, { role: 'user', content: userMessage }]);\r\n\r\n    try {\r\n      let fullResponse = '';\r\n      for await (const chunk of llm.generateStreamingResponse(userMessage)) {\r\n        fullResponse += chunk.response;\r\n        // Update the assistant's message as chunks arrive\r\n        setMessages(prev => {\r\n          const newMessages = [...prev];\r\n          if (newMessages[newMessages.length - 1]?.role === 'assistant') {\r\n            newMessages[newMessages.length - 1].content = fullResponse;\r\n          } else {\r\n            newMessages.push({ role: 'assistant', content: fullResponse });\r\n          }\r\n          return newMessages;\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.error('Error:', error);\r\n      setMessages(prev => [\r\n        ...prev,\r\n        { role: 'assistant', content: 'Sorry, there was an error processing your request.' }\r\n      ]);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleKeyDown = (e: React.KeyboardEvent) => {\r\n    if (e.key === 'Enter' && !e.shiftKey) {\r\n      e.preventDefault();\r\n      handleSubmit(e);\r\n    }\r\n  };\r\n\r\n  const handleClear = () => {\r\n    setMessages([]);\r\n    llm.clearContext();\r\n  };\r\n\r\n  const handleNewChat = () => {\r\n    setMessages([]);\r\n    llm.clearContext();\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex flex-col h-full\">\r\n      {/* Header */}\r\n      <div className=\"flex justify-between items-center p-4 border-b\">\r\n        <div className=\"flex gap-2\">\r\n          <Button variant=\"outline\" onClick={() => onModelChange('architect')}>\r\n            Architect Mode\r\n          </Button>\r\n          <Button variant=\"outline\" onClick={() => onModelChange('developer')}>\r\n            Developer Mode\r\n          </Button>\r\n        </div>\r\n        <div className=\"flex gap-2\">\r\n          <Button variant=\"outline\" onClick={handleClear}>\r\n            Clear\r\n          </Button>\r\n          <Button onClick={handleNewChat}>\r\n            New Chat\r\n          </Button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Messages */}\r\n      <ScrollArea className=\"flex-1 p-4\">\r\n        <div className=\"space-y-4\">\r\n          {messages.map((message, i) => (\r\n            <div\r\n              key={i}\r\n              className={`flex ${\r\n                message.role === 'user' ? 'justify-end' : 'justify-start'\r\n              }`}\r\n            >\r\n              <div\r\n                className={`max-w-[80%] rounded-lg p-4 ${\r\n                  message.role === 'user'\r\n                    ? 'bg-primary text-primary-foreground'\r\n                    : 'bg-muted'\r\n                }`}\r\n              >\r\n                <pre className=\"whitespace-pre-wrap font-sans\">\r\n                  {message.content}\r\n                </pre>\r\n              </div>\r\n            </div>\r\n          ))}\r\n          <div ref={scrollRef} />\r\n        </div>\r\n      </ScrollArea>\r\n\r\n      {/* Input */}\r\n      <form onSubmit={handleSubmit} className=\"p-4 border-t\">\r\n        <div className=\"flex gap-2\">\r\n          <textarea\r\n            value={input}\r\n            onChange={(e) => setInput(e.target.value)}\r\n            onKeyDown={handleKeyDown}\r\n            placeholder=\"Type your message...\"\r\n            rows={1}\r\n            className=\"flex-1 resize-none border rounded-md p-2\"\r\n            disabled={isLoading}\r\n          />\r\n          <Button type=\"submit\" disabled={isLoading}>\r\n            {isLoading ? 'Sending...' : 'Send'}\r\n          </Button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 436, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 442, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/alex/testing-browser/audio-learning-hub/src/lib/ollama/llm-manager.ts"],"sourcesContent":["interface StreamChunk {\r\n  model: string;\r\n  created_at: string;\r\n  response: string;\r\n  done: boolean;\r\n  context?: number[];\r\n}\r\n\r\nexport class LLMManager {\r\n  private currentModel: string = 'deepseek-r1:14b';\r\n  private context: number[] | null = null;\r\n\r\n  setActiveModel(model: string) {\r\n    this.currentModel = model;\r\n  }\r\n\r\n  async getResponse(prompt: string): Promise<string> {\r\n    console.log('LLM Request:', { prompt });\r\n    \r\n    try {\r\n      const response = await fetch('http://localhost:11434/api/generate', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({\r\n          model: this.currentModel,\r\n          prompt,\r\n          stream: false,\r\n          context: this.context\r\n        })\r\n      });\r\n\r\n      console.log('Ollama Response Status:', response.status);\r\n\r\n      if (!response.ok) {\r\n        throw new Error(`Ollama API error: ${response.status}`);\r\n      }\r\n\r\n      const data = await response.json();\r\n      console.log('Ollama Response Data:', data);\r\n\r\n      if (data.context) {\r\n        this.context = data.context;\r\n      }\r\n\r\n      return data.response;\r\n    } catch (error) {\r\n      console.error('LLM Request Failed:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  async *generateStreamingResponse(prompt: string) {\r\n    try {\r\n      const response = await fetch('http://localhost:11434/api/generate', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({\r\n          model: this.currentModel,\r\n          prompt,\r\n          stream: true,\r\n          context: this.context\r\n        })\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error(`Ollama API error: ${response.status}`);\r\n      }\r\n\r\n      const reader = response.body?.getReader();\r\n      if (!reader) {\r\n        throw new Error('Response body is null');\r\n      }\r\n\r\n      const decoder = new TextDecoder();\r\n      let buffer = '';\r\n\r\n      while (true) {\r\n        const { done, value } = await reader.read();\r\n        if (done) break;\r\n\r\n        buffer += decoder.decode(value, { stream: true });\r\n        const lines = buffer.split('\\n');\r\n        buffer = lines.pop() || '';\r\n\r\n        for (const line of lines) {\r\n          if (line.trim()) {\r\n            try {\r\n              const chunk: StreamChunk = JSON.parse(line);\r\n              if (chunk.context) {\r\n                this.context = chunk.context;\r\n              }\r\n              yield chunk;\r\n            } catch (e) {\r\n              console.error('Error parsing chunk:', e);\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      if (buffer) {\r\n        try {\r\n          const chunk: StreamChunk = JSON.parse(buffer);\r\n          if (chunk.context) {\r\n            this.context = chunk.context;\r\n          }\r\n          yield chunk;\r\n        } catch (e) {\r\n          console.error('Error parsing final chunk:', e);\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error('Streaming Request Failed:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  clearContext() {\r\n    this.context = null;\r\n  }\r\n}\r\n"],"names":[],"mappings":";;;AAQO,MAAM;IACH,eAAuB,kBAAkB;IACzC,UAA2B,KAAK;IAExC,eAAe,KAAa,EAAE;QAC5B,IAAI,CAAC,YAAY,GAAG;IACtB;IAEA,MAAM,YAAY,MAAc,EAAmB;QACjD,QAAQ,GAAG,CAAC,gBAAgB;YAAE;QAAO;QAErC,IAAI;YACF,MAAM,WAAW,MAAM,MAAM,uCAAuC;gBAClE,QAAQ;gBACR,SAAS;oBAAE,gBAAgB;gBAAmB;gBAC9C,MAAM,KAAK,SAAS,CAAC;oBACnB,OAAO,IAAI,CAAC,YAAY;oBACxB;oBACA,QAAQ;oBACR,SAAS,IAAI,CAAC,OAAO;gBACvB;YACF;YAEA,QAAQ,GAAG,CAAC,2BAA2B,SAAS,MAAM;YAEtD,IAAI,CAAC,SAAS,EAAE,EAAE;gBAChB,MAAM,IAAI,MAAM,CAAC,kBAAkB,EAAE,SAAS,MAAM,EAAE;YACxD;YAEA,MAAM,OAAO,MAAM,SAAS,IAAI;YAChC,QAAQ,GAAG,CAAC,yBAAyB;YAErC,IAAI,KAAK,OAAO,EAAE;gBAChB,IAAI,CAAC,OAAO,GAAG,KAAK,OAAO;YAC7B;YAEA,OAAO,KAAK,QAAQ;QACtB,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,uBAAuB;YACrC,MAAM;QACR;IACF;IAEA,OAAO,0BAA0B,MAAc,EAAE;QAC/C,IAAI;YACF,MAAM,WAAW,MAAM,MAAM,uCAAuC;gBAClE,QAAQ;gBACR,SAAS;oBAAE,gBAAgB;gBAAmB;gBAC9C,MAAM,KAAK,SAAS,CAAC;oBACnB,OAAO,IAAI,CAAC,YAAY;oBACxB;oBACA,QAAQ;oBACR,SAAS,IAAI,CAAC,OAAO;gBACvB;YACF;YAEA,IAAI,CAAC,SAAS,EAAE,EAAE;gBAChB,MAAM,IAAI,MAAM,CAAC,kBAAkB,EAAE,SAAS,MAAM,EAAE;YACxD;YAEA,MAAM,SAAS,SAAS,IAAI,EAAE;YAC9B,IAAI,CAAC,QAAQ;gBACX,MAAM,IAAI,MAAM;YAClB;YAEA,MAAM,UAAU,IAAI;YACpB,IAAI,SAAS;YAEb,MAAO,KAAM;gBACX,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,MAAM,OAAO,IAAI;gBACzC,IAAI,MAAM;gBAEV,UAAU,QAAQ,MAAM,CAAC,OAAO;oBAAE,QAAQ;gBAAK;gBAC/C,MAAM,QAAQ,OAAO,KAAK,CAAC;gBAC3B,SAAS,MAAM,GAAG,MAAM;gBAExB,KAAK,MAAM,QAAQ,MAAO;oBACxB,IAAI,KAAK,IAAI,IAAI;wBACf,IAAI;4BACF,MAAM,QAAqB,KAAK,KAAK,CAAC;4BACtC,IAAI,MAAM,OAAO,EAAE;gCACjB,IAAI,CAAC,OAAO,GAAG,MAAM,OAAO;4BAC9B;4BACA,MAAM;wBACR,EAAE,OAAO,GAAG;4BACV,QAAQ,KAAK,CAAC,wBAAwB;wBACxC;oBACF;gBACF;YACF;YAEA,IAAI,QAAQ;gBACV,IAAI;oBACF,MAAM,QAAqB,KAAK,KAAK,CAAC;oBACtC,IAAI,MAAM,OAAO,EAAE;wBACjB,IAAI,CAAC,OAAO,GAAG,MAAM,OAAO;oBAC9B;oBACA,MAAM;gBACR,EAAE,OAAO,GAAG;oBACV,QAAQ,KAAK,CAAC,8BAA8B;gBAC9C;YACF;QACF,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,6BAA6B;YAC3C,MAAM;QACR;IACF;IAEA,eAAe;QACb,IAAI,CAAC,OAAO,GAAG;IACjB;AACF"}},
    {"offset": {"line": 551, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 557, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/alex/testing-browser/audio-learning-hub/src/components/chat-container.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { useState } from 'react';\r\nimport { ChatPanel } from './chat-panel';\r\nimport { LLMManager } from '../lib/ollama/llm-manager';\r\n\r\nconst llm = new LLMManager();\r\n\r\nexport function ChatContainer() {\r\n  const [selectedModel, setSelectedModel] = useState<string>('developer');\r\n\r\n  const handleModelChange = (model: string) => {\r\n    setSelectedModel(model);\r\n  };\r\n\r\n  return (\r\n    <div className=\"h-full flex flex-col\">\r\n      <ChatPanel \r\n        llm={llm}\r\n        modelId={selectedModel}\r\n        onModelChange={handleModelChange}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;;;AAJA;;;;AAMA,MAAM,MAAM,IAAI,yIAAA,CAAA,aAAU;AAEnB,SAAS;;IACd,MAAM,CAAC,eAAe,iBAAiB,GAAG,CAAA,GAAA,mUAAA,CAAA,WAAQ,AAAD,EAAU;IAE3D,MAAM,oBAAoB,CAAC;QACzB,iBAAiB;IACnB;IAEA,qBACE,mWAAC;QAAI,WAAU;kBACb,cAAA,mWAAC,sIAAA,CAAA,YAAS;YACR,KAAK;YACL,SAAS;YACT,eAAe;;;;;;;;;;;AAIvB;GAhBgB;KAAA"}},
    {"offset": {"line": 601, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}